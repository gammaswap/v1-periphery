{
  "abi": [
    {
      "inputs": [],
      "name": "DeployFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Forbidden",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProtocolExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProtocolNotSet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProtocolRestricted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroProtocol",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "protocolFee",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "origMin",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "origMax",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isSet",
          "type": "bool"
        }
      ],
      "name": "FeeUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "currentOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "cfmm",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "protocolId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "addProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPoolsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_protocolId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_cfmm",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getKey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "getPoolFee",
      "outputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_protocolFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_origMinFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_origMaxFee",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isSet",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "name": "getPools",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "_pools",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_protocolId",
          "type": "uint16"
        }
      ],
      "name": "getProtocol",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_protocolId",
          "type": "uint16"
        }
      ],
      "name": "isProtocolRestricted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "origMax",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "origMin",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_protocolId",
          "type": "uint16"
        }
      ],
      "name": "removeProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_protocolId",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "_isRestricted",
          "type": "bool"
        }
      ],
      "name": "setIsProtocolRestricted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_protocolFee",
          "type": "uint16"
        },
        {
          "internalType": "uint24",
          "name": "_origMinFee",
          "type": "uint24"
        },
        {
          "internalType": "uint24",
          "name": "_origMaxFee",
          "type": "uint24"
        },
        {
          "internalType": "bool",
          "name": "_isSet",
          "type": "bool"
        }
      ],
      "name": "setPoolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "addProtocol(address)": "771d4c28",
    "allPoolsLength()": "efde4e64",
    "createPool(uint16,address,address[],bytes)": "f4bff5f1",
    "fee()": "ddca3f43",
    "feeInfo()": "995b5aae",
    "feeTo()": "017e7e58",
    "feeToSetter()": "094b7415",
    "getKey(address)": "93790f44",
    "getPool(bytes32)": "f6c00927",
    "getPoolFee(address)": "42fcc6fb",
    "getPools(uint256,uint256)": "bbe95837",
    "getProtocol(uint16)": "d2c7c2a4",
    "isProtocolRestricted(uint16)": "d7d1e126",
    "origMax()": "07746e25",
    "origMin()": "84915e7f",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "removeProtocol(uint16)": "466e0c0a",
    "setIsProtocolRestricted(uint16,bool)": "b3d5d66b",
    "setPoolFee(address,address,uint16,uint24,uint24,bool)": "02b764ad",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DeployFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Forbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolRestricted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroProtocol\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"protocolFee\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"origMin\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"origMax\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isSet\",\"type\":\"bool\"}],\"name\":\"FeeUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cfmm\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"protocolId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"addProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPoolsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_protocolId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_cfmm\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"getPoolFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_origMinFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_origMaxFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isSet\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"getPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_protocolId\",\"type\":\"uint16\"}],\"name\":\"getProtocol\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_protocolId\",\"type\":\"uint16\"}],\"name\":\"isProtocolRestricted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"origMax\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"origMin\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_protocolId\",\"type\":\"uint16\"}],\"name\":\"removeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_protocolId\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"_isRestricted\",\"type\":\"bool\"}],\"name\":\"setIsProtocolRestricted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_protocolFee\",\"type\":\"uint16\"},{\"internalType\":\"uint24\",\"name\":\"_origMinFee\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"_origMaxFee\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"_isSet\",\"type\":\"bool\"}],\"name\":\"setPoolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Daniel D. Alcarraz (https://github.com/0xDanr)\",\"details\":\"If another GammaPoolFactory contract is created it is recommended to inherit from this contract\",\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\"},\"addProtocol(address)\":{\"details\":\"Add a protocol implementation to GammaPoolFactory contract. Which means GammaPoolFactory can create GammaPools with this implementation (protocol)\",\"params\":{\"_implementation\":\"- implementation address of GammaPool proxy contract. Because all GammaPools are created as proxy contracts\"}},\"allPoolsLength()\":{\"returns\":{\"_0\":\"count - number of GammaPools that have been instantiated through this GammaPoolFactory contract\"}},\"constructor\":{\"details\":\"Initialize `owner` of factory contract\"},\"createPool(uint16,address,address[],bytes)\":{\"details\":\"Instantiate a new GammaPool for a CFMM based on an existing implementation (protocolId)\",\"params\":{\"_cfmm\":\"- address of CFMM the GammaPool is created for\",\"_data\":\"- custom struct containing additional information used to verify the `_cfmm`\",\"_protocolId\":\"- id identifier of GammaPool protocol (can be thought of as version)\",\"_tokens\":\"- addresses of ERC20 tokens in CFMM, used for validation during runtime of function\"},\"returns\":{\"_0\":\"_address - address of new GammaPool proxy contract that was instantiated\"}},\"feeInfo()\":{\"returns\":{\"_0\":\"feeTo - address that receives protocol fees\",\"_1\":\"fee - protocol fee charged by GammaPool to liquidity borrowers in terms of basis points\"}},\"getPoolFee(address)\":{\"details\":\"Get pool fee parameters used to calculate protocol fees\",\"params\":{\"_pool\":\"- pool address identifier\"},\"returns\":{\"_isSet\":\"- bool flag, true use fee information, false use GammaSwap default fees\",\"_origMaxFee\":\"- max origination fee\",\"_origMinFee\":\"- min origination fee\",\"_protocolFee\":\"- address of CFMM the GammaPool is created for\",\"_to\":\"- address receiving fee\"}},\"getPools(uint256,uint256)\":{\"details\":\"Get list of pools from start index to end index. If it goes over index it returns up to the max size of allPools array\",\"params\":{\"end\":\"- end index of pools to search\",\"start\":\"- start index of pools to search\"},\"returns\":{\"_pools\":\"- all pools requested\"}},\"getProtocol(uint16)\":{\"details\":\"Get implementation address that maps to protocolId. This is the actual implementation code that a GammaPool implements for a protocolId\",\"params\":{\"_protocolId\":\"- id identifier of GammaPool implementation (can be thought of as version)\"},\"returns\":{\"_0\":\"_address - implementation address of GammaPool proxy contract. Because all GammaPools are created as proxy contracts\"}},\"isProtocolRestricted(uint16)\":{\"details\":\"Check if protocol is restricted. Which means only owner of GammaPoolFactory is allowed to instantiate GammaPools using this protocol\",\"params\":{\"_protocolId\":\"- id identifier of GammaPool protocol (can be thought of as version) that is being checked\"},\"returns\":{\"_0\":\"_isRestricted - true if protocol is restricted, false otherwise\"}},\"removeProtocol(uint16)\":{\"details\":\"Removing protocol implementation from GammaPoolFactory contract. Which means GammaPoolFactory will no longer be able to create GammaPools with this implementation (protocol)\",\"params\":{\"_protocolId\":\"- id identifier of GammaPool implementation\"}},\"setIsProtocolRestricted(uint16,bool)\":{\"details\":\"Set a protocol to be restricted or unrestricted. That means only owner of GammaPoolFactory is allowed to instantiate GammaPools using this protocol\",\"params\":{\"_isRestricted\":\"- set to true for restricted, set to false for unrestricted\",\"_protocolId\":\"- id identifier of GammaPool protocol (can be thought of as version) that is being restricted\"}},\"setPoolFee(address,address,uint16,uint24,uint24,bool)\":{\"details\":\"Set pool fee parameters used to calculate protocol fees\",\"params\":{\"_isSet\":\"- bool flag, true use fee information, false use GammaSwap default fees\",\"_origMaxFee\":\"- max origination fee\",\"_origMinFee\":\"- min origination fee\",\"_pool\":\"- id identifier of GammaPool protocol (can be thought of as version)\",\"_protocolFee\":\"- address of CFMM the GammaPool is created for\",\"_to\":\"- address receiving fee\"}},\"transferOwnership(address)\":{\"details\":\"Starts ownership transfer to new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\",\"params\":{\"newOwner\":\"- new address that will have the owner privileges over the factory contract\"}}},\"stateVariables\":{\"fee\":{\"details\":\"See {IGammaPoolFactory-fee}\"},\"feeTo\":{\"details\":\"See {IGammaPoolFactory-feeTo}\"},\"feeToSetter\":{\"details\":\"See {IGammaPoolFactory-feeToSetter}\"},\"getKey\":{\"details\":\"See {IGammaPoolFactory-getKey}\"},\"getPool\":{\"details\":\"See {IGammaPoolFactory-getPool}\"},\"origMax\":{\"details\":\"See {IGammaPoolFactory-origMax}\"},\"origMin\":{\"details\":\"See {IGammaPoolFactory-origMin}\"}},\"title\":\"Abstract factory contract to create more GammaPool contracts.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"The new owner accepts the ownership transfer.\"},\"addProtocol(address)\":{\"notice\":\"Only owner of GammaPoolFactory can call this function\"},\"removeProtocol(uint16)\":{\"notice\":\"Only owner of GammaPoolFactory can call this function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@gammaswap/v1-core/contracts/base/AbstractGammaPoolFactory.sol\":\"AbstractGammaPoolFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@gammaswap/=node_modules/@gammaswap/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@gammaswap/v1-core/contracts/base/AbstractGammaPoolFactory.sol\":{\"keccak256\":\"0xd79ac13f146daacd065d1f58dce7240e9a876c9b58568bd87acc567a5bba865a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0570db7b75d5fad9fd8b6fda8d30d15b261db79a03bee64b7b9dc6176c44da36\",\"dweb:/ipfs/QmPpxuREizUsc6KNEdR5WcfDDPnu6TAGcyKT3GXy8GzEPz\"]},\"node_modules/@gammaswap/v1-core/contracts/interfaces/IGammaPoolFactory.sol\":{\"keccak256\":\"0xb8169429532ad037f8ab27c221d98132bdc5f815eebb16392bb51a3045b262ee\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bf2ac76dc37238eea4d26f793da4b135e1803e46e8b14f16e8062271954dab35\",\"dweb:/ipfs/QmVseSs8jTetSTH7hxGA4E4LMqPdJNEu12d268oobGyM7M\"]},\"node_modules/@gammaswap/v1-core/contracts/utils/TwoStepOwnable.sol\":{\"keccak256\":\"0xea02119e27faa92c024eba5f06ec1c0931adbbc3b01618f0db105a3d2b95948c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://85672f43eb51cca5f7b02c4a1176542598319748c1455a4f365ce93e83745a26\",\"dweb:/ipfs/QmYQQJgabU4v1nVuBWEfyXK6e3urUPaGZofLWTpbYTSQ5G\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "DeployFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Forbidden"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProtocolExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProtocolNotSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProtocolRestricted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroProtocol"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint16",
              "name": "protocolFee",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint24",
              "name": "origMin",
              "type": "uint24",
              "indexed": false
            },
            {
              "internalType": "uint24",
              "name": "origMax",
              "type": "uint24",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isSet",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FeeUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currentOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "cfmm",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint16",
              "name": "protocolId",
              "type": "uint16",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolCreated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_implementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addProtocol"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allPoolsLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_protocolId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "_cfmm",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "_tokens",
              "type": "address[]"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fee",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeTo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeToSetter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getKey",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pool",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolFee",
          "outputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_origMinFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_origMaxFee",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isSet",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPools",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "_pools",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_protocolId",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtocol",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_protocolId",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isProtocolRestricted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "origMax",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "origMin",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_protocolId",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeProtocol"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_protocolId",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "_isRestricted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setIsProtocolRestricted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "_protocolFee",
              "type": "uint16"
            },
            {
              "internalType": "uint24",
              "name": "_origMinFee",
              "type": "uint24"
            },
            {
              "internalType": "uint24",
              "name": "_origMaxFee",
              "type": "uint24"
            },
            {
              "internalType": "bool",
              "name": "_isSet",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPoolFee"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner."
          },
          "addProtocol(address)": {
            "details": "Add a protocol implementation to GammaPoolFactory contract. Which means GammaPoolFactory can create GammaPools with this implementation (protocol)",
            "params": {
              "_implementation": "- implementation address of GammaPool proxy contract. Because all GammaPools are created as proxy contracts"
            }
          },
          "allPoolsLength()": {
            "returns": {
              "_0": "count - number of GammaPools that have been instantiated through this GammaPoolFactory contract"
            }
          },
          "constructor": {
            "details": "Initialize `owner` of factory contract"
          },
          "createPool(uint16,address,address[],bytes)": {
            "details": "Instantiate a new GammaPool for a CFMM based on an existing implementation (protocolId)",
            "params": {
              "_cfmm": "- address of CFMM the GammaPool is created for",
              "_data": "- custom struct containing additional information used to verify the `_cfmm`",
              "_protocolId": "- id identifier of GammaPool protocol (can be thought of as version)",
              "_tokens": "- addresses of ERC20 tokens in CFMM, used for validation during runtime of function"
            },
            "returns": {
              "_0": "_address - address of new GammaPool proxy contract that was instantiated"
            }
          },
          "feeInfo()": {
            "returns": {
              "_0": "feeTo - address that receives protocol fees",
              "_1": "fee - protocol fee charged by GammaPool to liquidity borrowers in terms of basis points"
            }
          },
          "getPoolFee(address)": {
            "details": "Get pool fee parameters used to calculate protocol fees",
            "params": {
              "_pool": "- pool address identifier"
            },
            "returns": {
              "_isSet": "- bool flag, true use fee information, false use GammaSwap default fees",
              "_origMaxFee": "- max origination fee",
              "_origMinFee": "- min origination fee",
              "_protocolFee": "- address of CFMM the GammaPool is created for",
              "_to": "- address receiving fee"
            }
          },
          "getPools(uint256,uint256)": {
            "details": "Get list of pools from start index to end index. If it goes over index it returns up to the max size of allPools array",
            "params": {
              "end": "- end index of pools to search",
              "start": "- start index of pools to search"
            },
            "returns": {
              "_pools": "- all pools requested"
            }
          },
          "getProtocol(uint16)": {
            "details": "Get implementation address that maps to protocolId. This is the actual implementation code that a GammaPool implements for a protocolId",
            "params": {
              "_protocolId": "- id identifier of GammaPool implementation (can be thought of as version)"
            },
            "returns": {
              "_0": "_address - implementation address of GammaPool proxy contract. Because all GammaPools are created as proxy contracts"
            }
          },
          "isProtocolRestricted(uint16)": {
            "details": "Check if protocol is restricted. Which means only owner of GammaPoolFactory is allowed to instantiate GammaPools using this protocol",
            "params": {
              "_protocolId": "- id identifier of GammaPool protocol (can be thought of as version) that is being checked"
            },
            "returns": {
              "_0": "_isRestricted - true if protocol is restricted, false otherwise"
            }
          },
          "removeProtocol(uint16)": {
            "details": "Removing protocol implementation from GammaPoolFactory contract. Which means GammaPoolFactory will no longer be able to create GammaPools with this implementation (protocol)",
            "params": {
              "_protocolId": "- id identifier of GammaPool implementation"
            }
          },
          "setIsProtocolRestricted(uint16,bool)": {
            "details": "Set a protocol to be restricted or unrestricted. That means only owner of GammaPoolFactory is allowed to instantiate GammaPools using this protocol",
            "params": {
              "_isRestricted": "- set to true for restricted, set to false for unrestricted",
              "_protocolId": "- id identifier of GammaPool protocol (can be thought of as version) that is being restricted"
            }
          },
          "setPoolFee(address,address,uint16,uint24,uint24,bool)": {
            "details": "Set pool fee parameters used to calculate protocol fees",
            "params": {
              "_isSet": "- bool flag, true use fee information, false use GammaSwap default fees",
              "_origMaxFee": "- max origination fee",
              "_origMinFee": "- min origination fee",
              "_pool": "- id identifier of GammaPool protocol (can be thought of as version)",
              "_protocolFee": "- address of CFMM the GammaPool is created for",
              "_to": "- address receiving fee"
            }
          },
          "transferOwnership(address)": {
            "details": "Starts ownership transfer to new account. Replaces the pending transfer if there is one. Can only be called by the current owner.",
            "params": {
              "newOwner": "- new address that will have the owner privileges over the factory contract"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptOwnership()": {
            "notice": "The new owner accepts the ownership transfer."
          },
          "addProtocol(address)": {
            "notice": "Only owner of GammaPoolFactory can call this function"
          },
          "removeProtocol(uint16)": {
            "notice": "Only owner of GammaPoolFactory can call this function"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@gammaswap/=node_modules/@gammaswap/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@gammaswap/v1-core/contracts/base/AbstractGammaPoolFactory.sol": "AbstractGammaPoolFactory"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@gammaswap/v1-core/contracts/base/AbstractGammaPoolFactory.sol": {
        "keccak256": "0xd79ac13f146daacd065d1f58dce7240e9a876c9b58568bd87acc567a5bba865a",
        "urls": [
          "bzz-raw://0570db7b75d5fad9fd8b6fda8d30d15b261db79a03bee64b7b9dc6176c44da36",
          "dweb:/ipfs/QmPpxuREizUsc6KNEdR5WcfDDPnu6TAGcyKT3GXy8GzEPz"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@gammaswap/v1-core/contracts/interfaces/IGammaPoolFactory.sol": {
        "keccak256": "0xb8169429532ad037f8ab27c221d98132bdc5f815eebb16392bb51a3045b262ee",
        "urls": [
          "bzz-raw://bf2ac76dc37238eea4d26f793da4b135e1803e46e8b14f16e8062271954dab35",
          "dweb:/ipfs/QmVseSs8jTetSTH7hxGA4E4LMqPdJNEu12d268oobGyM7M"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@gammaswap/v1-core/contracts/utils/TwoStepOwnable.sol": {
        "keccak256": "0xea02119e27faa92c024eba5f06ec1c0931adbbc3b01618f0db105a3d2b95948c",
        "urls": [
          "bzz-raw://85672f43eb51cca5f7b02c4a1176542598319748c1455a4f365ce93e83745a26",
          "dweb:/ipfs/QmYQQJgabU4v1nVuBWEfyXK6e3urUPaGZofLWTpbYTSQ5G"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@gammaswap/v1-core/contracts/base/AbstractGammaPoolFactory.sol",
    "id": 35818,
    "exportedSymbols": {
      "AbstractGammaPoolFactory": [
        35817
      ],
      "IGammaPoolFactory": [
        36595
      ],
      "TwoStepOwnable": [
        37487
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:4223:42",
    "nodes": [
      {
        "id": 35659,
        "nodeType": "PragmaDirective",
        "src": "37:24:42",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 35660,
        "nodeType": "ImportDirective",
        "src": "63:45:42",
        "nodes": [],
        "absolutePath": "node_modules/@gammaswap/v1-core/contracts/interfaces/IGammaPoolFactory.sol",
        "file": "../interfaces/IGammaPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35818,
        "sourceUnit": 36596,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35661,
        "nodeType": "ImportDirective",
        "src": "109:37:42",
        "nodes": [],
        "absolutePath": "node_modules/@gammaswap/v1-core/contracts/utils/TwoStepOwnable.sol",
        "file": "../utils/TwoStepOwnable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35818,
        "sourceUnit": 37488,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35817,
        "nodeType": "ContractDefinition",
        "src": "385:3874:42",
        "nodes": [
          {
            "id": 35668,
            "nodeType": "ErrorDefinition",
            "src": "472:18:42",
            "nodes": [],
            "errorSelector": "ee90c468",
            "name": "Forbidden",
            "nameLocation": "478:9:42",
            "parameters": {
              "id": 35667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:2:42"
            }
          },
          {
            "id": 35670,
            "nodeType": "ErrorDefinition",
            "src": "495:21:42",
            "nodes": [],
            "errorSelector": "3c5113f6",
            "name": "ZeroProtocol",
            "nameLocation": "501:12:42",
            "parameters": {
              "id": 35669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "513:2:42"
            }
          },
          {
            "id": 35672,
            "nodeType": "ErrorDefinition",
            "src": "521:23:42",
            "nodes": [],
            "errorSelector": "ea1bea50",
            "name": "ProtocolNotSet",
            "nameLocation": "527:14:42",
            "parameters": {
              "id": 35671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "541:2:42"
            }
          },
          {
            "id": 35674,
            "nodeType": "ErrorDefinition",
            "src": "549:23:42",
            "nodes": [],
            "errorSelector": "e927d036",
            "name": "ProtocolExists",
            "nameLocation": "555:14:42",
            "parameters": {
              "id": 35673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "569:2:42"
            }
          },
          {
            "id": 35676,
            "nodeType": "ErrorDefinition",
            "src": "577:27:42",
            "nodes": [],
            "errorSelector": "b383beb1",
            "name": "ProtocolRestricted",
            "nameLocation": "583:18:42",
            "parameters": {
              "id": 35675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:2:42"
            }
          },
          {
            "id": 35678,
            "nodeType": "ErrorDefinition",
            "src": "609:19:42",
            "nodes": [],
            "errorSelector": "f48e3c26",
            "name": "PoolExists",
            "nameLocation": "615:10:42",
            "parameters": {
              "id": 35677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "625:2:42"
            }
          },
          {
            "id": 35680,
            "nodeType": "ErrorDefinition",
            "src": "633:21:42",
            "nodes": [],
            "errorSelector": "b4f54111",
            "name": "DeployFailed",
            "nameLocation": "639:12:42",
            "parameters": {
              "id": 35679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "651:2:42"
            }
          },
          {
            "id": 35682,
            "nodeType": "ErrorDefinition",
            "src": "659:20:42",
            "nodes": [],
            "errorSelector": "d92e233d",
            "name": "ZeroAddress",
            "nameLocation": "665:11:42",
            "parameters": {
              "id": 35681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "676:2:42"
            }
          },
          {
            "id": 35688,
            "nodeType": "VariableDeclaration",
            "src": "730:51:42",
            "nodes": [],
            "baseFunctions": [
              36495
            ],
            "constant": false,
            "documentation": {
              "id": 35683,
              "nodeType": "StructuredDocumentation",
              "src": "685:40:42",
              "text": "@dev See {IGammaPoolFactory-getPool}"
            },
            "functionSelector": "f6c00927",
            "mutability": "mutable",
            "name": "getPool",
            "nameLocation": "774:7:42",
            "overrides": {
              "id": 35687,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "765:8:42"
            },
            "scope": 35817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 35686,
              "keyType": {
                "id": 35684,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "738:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "730:27:42",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
                "id": 35685,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "749:7:42",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 35694,
            "nodeType": "VariableDeclaration",
            "src": "891:50:42",
            "nodes": [],
            "baseFunctions": [
              36503
            ],
            "constant": false,
            "documentation": {
              "id": 35689,
              "nodeType": "StructuredDocumentation",
              "src": "847:39:42",
              "text": "@dev See {IGammaPoolFactory-getKey}"
            },
            "functionSelector": "93790f44",
            "mutability": "mutable",
            "name": "getKey",
            "nameLocation": "935:6:42",
            "overrides": {
              "id": 35693,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "926:8:42"
            },
            "scope": 35817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 35692,
              "keyType": {
                "id": 35690,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "899:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "891:27:42",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueType": {
                "id": 35691,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "910:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 35699,
            "nodeType": "VariableDeclaration",
            "src": "1035:38:42",
            "nodes": [],
            "baseFunctions": [
              36553
            ],
            "constant": false,
            "documentation": {
              "id": 35695,
              "nodeType": "StructuredDocumentation",
              "src": "990:40:42",
              "text": "@dev See {IGammaPoolFactory-origMin}"
            },
            "functionSelector": "84915e7f",
            "mutability": "mutable",
            "name": "origMin",
            "nameLocation": "1058:7:42",
            "overrides": {
              "id": 35697,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1049:8:42"
            },
            "scope": 35817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 35696,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "1035:6:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 35698,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1068:5:42",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "id": 35704,
            "nodeType": "VariableDeclaration",
            "src": "1125:38:42",
            "nodes": [],
            "baseFunctions": [
              36559
            ],
            "constant": false,
            "documentation": {
              "id": 35700,
              "nodeType": "StructuredDocumentation",
              "src": "1080:40:42",
              "text": "@dev See {IGammaPoolFactory-origMax}"
            },
            "functionSelector": "07746e25",
            "mutability": "mutable",
            "name": "origMax",
            "nameLocation": "1148:7:42",
            "overrides": {
              "id": 35702,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1139:8:42"
            },
            "scope": 35817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 35701,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "1125:6:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 35703,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1158:5:42",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "id": 35709,
            "nodeType": "VariableDeclaration",
            "src": "1211:34:42",
            "nodes": [],
            "baseFunctions": [
              36547
            ],
            "constant": false,
            "documentation": {
              "id": 35705,
              "nodeType": "StructuredDocumentation",
              "src": "1170:36:42",
              "text": "@dev See {IGammaPoolFactory-fee}"
            },
            "functionSelector": "ddca3f43",
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "1234:3:42",
            "overrides": {
              "id": 35707,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1225:8:42"
            },
            "scope": 35817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 35706,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "1211:6:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 35708,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1240:5:42",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "id": 35713,
            "nodeType": "VariableDeclaration",
            "src": "1342:29:42",
            "nodes": [],
            "baseFunctions": [
              36565
            ],
            "constant": false,
            "documentation": {
              "id": 35710,
              "nodeType": "StructuredDocumentation",
              "src": "1299:38:42",
              "text": "@dev See {IGammaPoolFactory-feeTo}"
            },
            "functionSelector": "017e7e58",
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "1366:5:42",
            "overrides": {
              "id": 35712,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1357:8:42"
            },
            "scope": 35817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 35711,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1342:7:42",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 35717,
            "nodeType": "VariableDeclaration",
            "src": "1427:35:42",
            "nodes": [],
            "baseFunctions": [
              36571
            ],
            "constant": false,
            "documentation": {
              "id": 35714,
              "nodeType": "StructuredDocumentation",
              "src": "1378:44:42",
              "text": "@dev See {IGammaPoolFactory-feeToSetter}"
            },
            "functionSelector": "094b7415",
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "1451:11:42",
            "overrides": {
              "id": 35716,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1442:8:42"
            },
            "scope": 35817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 35715,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1427:7:42",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 35739,
            "nodeType": "FunctionDefinition",
            "src": "1521:156:42",
            "nodes": [],
            "body": {
              "id": 35738,
              "nodeType": "Block",
              "src": "1610:67:42",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 35732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35730,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35713,
                      "src": "1620:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35731,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35722,
                      "src": "1628:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1620:14:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 35733,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:14:42"
                },
                {
                  "expression": {
                    "id": 35736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35734,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35717,
                      "src": "1644:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35735,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35724,
                      "src": "1658:12:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1644:26:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 35737,
                  "nodeType": "ExpressionStatement",
                  "src": "1644:26:42"
                }
              ]
            },
            "documentation": {
              "id": 35718,
              "nodeType": "StructuredDocumentation",
              "src": "1469:47:42",
              "text": "@dev Initialize `owner` of factory contract"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 35727,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35720,
                    "src": "1602:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 35728,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 35726,
                  "name": "TwoStepOwnable",
                  "nameLocations": [
                    "1587:14:42"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37487,
                  "src": "1587:14:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "1587:22:42"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 35725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35720,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1541:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 35739,
                  "src": "1533:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35719,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1533:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35722,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1557:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 35739,
                  "src": "1549:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1549:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35724,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1573:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 35739,
                  "src": "1565:20:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1532:54:42"
            },
            "returnParameters": {
              "id": 35729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1610:0:42"
            },
            "scope": 35817,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35755,
            "nodeType": "FunctionDefinition",
            "src": "1877:147:42",
            "nodes": [],
            "body": {
              "id": 35754,
              "nodeType": "Block",
              "src": "1938:86:42",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 35748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 35745,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1951:3:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 35746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1955:6:42",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1951:10:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 35747,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35742,
                      "src": "1965:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1951:22:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35753,
                  "nodeType": "IfStatement",
                  "src": "1948:70:42",
                  "trueBody": {
                    "id": 35752,
                    "nodeType": "Block",
                    "src": "1975:43:42",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35749,
                            "name": "Forbidden",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35668,
                            "src": "1996:9:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 35750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1996:11:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35751,
                        "nodeType": "RevertStatement",
                        "src": "1989:18:42"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 35740,
              "nodeType": "StructuredDocumentation",
              "src": "1683:189:42",
              "text": "@dev Revert if sender is not the required address in parameter (e.g. sender not owner or feeToSetter)\n @param _address - address transaction sender must be in order to not revert"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isForbidden",
            "nameLocation": "1886:11:42",
            "parameters": {
              "id": 35743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35742,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1906:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 35755,
                  "src": "1898:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1898:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1897:18:42"
            },
            "returnParameters": {
              "id": 35744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1938:0:42"
            },
            "scope": 35817,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 35773,
            "nodeType": "FunctionDefinition",
            "src": "2213:151:42",
            "nodes": [],
            "body": {
              "id": 35772,
              "nodeType": "Block",
              "src": "2276:88:42",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 35766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 35761,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35758,
                      "src": "2289:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 35764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2309:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 35763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2301:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 35762,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2301:7:42",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 35765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2301:10:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2289:22:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35771,
                  "nodeType": "IfStatement",
                  "src": "2286:72:42",
                  "trueBody": {
                    "id": 35770,
                    "nodeType": "Block",
                    "src": "2313:45:42",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35767,
                            "name": "ZeroAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35682,
                            "src": "2334:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 35768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2334:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35769,
                        "nodeType": "RevertStatement",
                        "src": "2327:20:42"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 35756,
              "nodeType": "StructuredDocumentation",
              "src": "2030:178:42",
              "text": "@dev Revert if address parameter is zero address. This is used transaction that are changing an address state variable\n @param _address - address that must not be zero"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isZeroAddress",
            "nameLocation": "2222:13:42",
            "parameters": {
              "id": 35759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35758,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2244:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 35773,
                  "src": "2236:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2236:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2235:18:42"
            },
            "returnParameters": {
              "id": 35760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2276:0:42"
            },
            "scope": 35817,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 35793,
            "nodeType": "FunctionDefinition",
            "src": "2560:143:42",
            "nodes": [],
            "body": {
              "id": 35792,
              "nodeType": "Block",
              "src": "2612:91:42",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 35786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 35779,
                        "name": "getPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35688,
                        "src": "2625:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 35781,
                      "indexExpression": {
                        "id": 35780,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35776,
                        "src": "2633:3:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2625:12:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 35784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2649:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 35783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2641:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 35782,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2641:7:42",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 35785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2641:10:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2625:26:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35791,
                  "nodeType": "IfStatement",
                  "src": "2622:75:42",
                  "trueBody": {
                    "id": 35790,
                    "nodeType": "Block",
                    "src": "2653:44:42",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35787,
                            "name": "PoolExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35678,
                            "src": "2674:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 35788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:12:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35789,
                        "nodeType": "RevertStatement",
                        "src": "2667:19:42"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 35774,
              "nodeType": "StructuredDocumentation",
              "src": "2370:185:42",
              "text": "@dev Revert if key already maps to a GammaPool. This is used to avoid duplicating GammaPool instances\n @param key - unique key used to identify GammaPool instance (e.g. salt)"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasPool",
            "nameLocation": "2569:7:42",
            "parameters": {
              "id": 35777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35776,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "2585:3:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 35793,
                  "src": "2577:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35775,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2577:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2576:13:42"
            },
            "returnParameters": {
              "id": 35778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2612:0:42"
            },
            "scope": 35817,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 35816,
            "nodeType": "FunctionDefinition",
            "src": "3404:853:42",
            "nodes": [],
            "body": {
              "id": 35815,
              "nodeType": "Block",
              "src": "3506:751:42",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3568:556:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3773:4:42",
                              "type": "",
                              "value": "0x00"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3786:4:42",
                                      "type": "",
                                      "value": "0xe8"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3796:4:42",
                                          "type": "",
                                          "value": "0x60"
                                        },
                                        {
                                          "name": "implementation",
                                          "nodeType": "YulIdentifier",
                                          "src": "3802:14:42"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "3792:3:42"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3792:25:42"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3782:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3782:36:42"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3820:48:42",
                                  "type": "",
                                  "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
                                }
                              ],
                              "functionName": {
                                "name": "or",
                                "nodeType": "YulIdentifier",
                                "src": "3779:2:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3779:90:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3766:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3766:104:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3766:104:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3991:4:42",
                              "type": "",
                              "value": "0x20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4004:4:42",
                                      "type": "",
                                      "value": "0x78"
                                    },
                                    {
                                      "name": "implementation",
                                      "nodeType": "YulIdentifier",
                                      "src": "4010:14:42"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "4000:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4000:25:42"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4027:32:42",
                                  "type": "",
                                  "value": "0x5af43d82803e903d91602b57fd5bf3"
                                }
                              ],
                              "functionName": {
                                "name": "or",
                                "nodeType": "YulIdentifier",
                                "src": "3997:2:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3997:63:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3984:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3984:77:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3984:77:42"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4074:40:42",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4094:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4097:4:42",
                              "type": "",
                              "value": "0x09"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4103:4:42",
                              "type": "",
                              "value": "0x37"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "4109:4:42"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "4086:7:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4086:28:42"
                        },
                        "variableNames": [
                          {
                            "name": "instance",
                            "nodeType": "YulIdentifier",
                            "src": "4074:8:42"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": "@solidity memory-safe-assembly",
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 35796,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3802:14:42",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35796,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4010:14:42",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35801,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4074:8:42",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35798,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4109:4:42",
                      "valueSize": 1
                    }
                  ],
                  "id": 35803,
                  "nodeType": "InlineAssembly",
                  "src": "3559:565:42"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 35809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 35804,
                      "name": "instance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35801,
                      "src": "4136:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 35807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4156:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 35806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4148:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 35805,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4148:7:42",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 35808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4148:10:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4136:22:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35814,
                  "nodeType": "IfStatement",
                  "src": "4133:118:42",
                  "trueBody": {
                    "id": 35813,
                    "nodeType": "Block",
                    "src": "4160:91:42",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35810,
                            "name": "DeployFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35680,
                            "src": "4181:12:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 35811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4181:14:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35812,
                        "nodeType": "RevertStatement",
                        "src": "4174:21:42"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 35794,
              "nodeType": "StructuredDocumentation",
              "src": "2709:690:42",
              "text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address.\n @param implementation - implementation address of GammaPool. Because all GammaPools are created as proxy contracts\n @param salt - the bytes32 key that is unique to the GammaPool and therefore also used as a unique identifier of the GammaPool\n @return instance - address of GammaPool that was created"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cloneDeterministic",
            "nameLocation": "3413:18:42",
            "parameters": {
              "id": 35799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35796,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "3440:14:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 35816,
                  "src": "3432:22:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3432:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35798,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "3464:4:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 35816,
                  "src": "3456:12:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35797,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3456:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3431:38:42"
            },
            "returnParameters": {
              "id": 35802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35801,
                  "mutability": "mutable",
                  "name": "instance",
                  "nameLocation": "3496:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 35816,
                  "src": "3488:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3488:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3487:18:42"
            },
            "scope": 35817,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 35663,
              "name": "IGammaPoolFactory",
              "nameLocations": [
                "431:17:42"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36595,
              "src": "431:17:42"
            },
            "id": 35664,
            "nodeType": "InheritanceSpecifier",
            "src": "431:17:42"
          },
          {
            "baseName": {
              "id": 35665,
              "name": "TwoStepOwnable",
              "nameLocations": [
                "450:14:42"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37487,
              "src": "450:14:42"
            },
            "id": 35666,
            "nodeType": "InheritanceSpecifier",
            "src": "450:14:42"
          }
        ],
        "canonicalName": "AbstractGammaPoolFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 35662,
          "nodeType": "StructuredDocumentation",
          "src": "148:237:42",
          "text": "@title Abstract factory contract to create more GammaPool contracts.\n @author Daniel D. Alcarraz (https://github.com/0xDanr)\n @dev If another GammaPoolFactory contract is created it is recommended to inherit from this contract"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          35817,
          37487,
          36595
        ],
        "name": "AbstractGammaPoolFactory",
        "nameLocation": "403:24:42",
        "scope": 35818,
        "usedErrors": [
          35668,
          35670,
          35672,
          35674,
          35676,
          35678,
          35680,
          35682
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 42
}