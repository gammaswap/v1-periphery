{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_protocolId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_longStrategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_shortStrategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_liquidationStrategy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint128[]",
          "name": "amounts",
          "type": "uint128[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "liquidity",
          "type": "uint128"
        },
        {
          "indexed": true,
          "internalType": "enum IStrategyEvents.TX_TYPE",
          "name": "txType",
          "type": "uint8"
        }
      ],
      "name": "ExternalSwap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "collateral",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "liquidity",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "writeDownAmt",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "enum IStrategyEvents.TX_TYPE",
          "name": "txType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "Liquidation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "LoanCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint128[]",
          "name": "tokensHeld",
          "type": "uint128[]"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "liquidity",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "initLiquidity",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "rateIndex",
          "type": "uint96"
        },
        {
          "indexed": true,
          "internalType": "enum IStrategyEvents.TX_TYPE",
          "name": "txType",
          "type": "uint8"
        }
      ],
      "name": "LoanUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenBorrowed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "lastBlockNumber",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "accFeeIndex",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenBorrowedPlusInterest",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "lpInvariant",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "borrowedInvariant",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128[]",
          "name": "cfmmReserves",
          "type": "uint128[]"
        },
        {
          "indexed": true,
          "internalType": "enum IStrategyEvents.TX_TYPE",
          "name": "txType",
          "type": "uint8"
        }
      ],
      "name": "PoolUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "accFeeIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "name": "batchLiquidations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalLoanLiquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "refund",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "borrowLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidityBorrowed",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cfmm",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createLoan",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "decimals_",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "decreaseCollateral",
      "outputs": [
        {
          "internalType": "uint128[]",
          "name": "tokensHeld",
          "type": "uint128[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "depositNoPull",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "depositReserves",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "reserves",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCFMMBalances",
      "outputs": [
        {
          "internalType": "uint128[]",
          "name": "cfmmReserves",
          "type": "uint128[]"
        },
        {
          "internalType": "uint256",
          "name": "cfmmInvariant",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cfmmTotalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getConstantPoolData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "poolId",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "protocolId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "longStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "shortStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidationStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "LP_TOKEN_BALANCE",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "LP_TOKEN_BORROWED",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "LP_TOKEN_BORROWED_PLUS_INTEREST",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "BORROWED_INVARIANT",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "LP_INVARIANT",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "cfmm",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "accFeeIndex",
              "type": "uint96"
            },
            {
              "internalType": "uint48",
              "name": "LAST_BLOCK_NUMBER",
              "type": "uint48"
            },
            {
              "internalType": "uint80",
              "name": "lastCFMMFeeIndex",
              "type": "uint80"
            },
            {
              "internalType": "uint128",
              "name": "lastCFMMInvariant",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "lastCFMMTotalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "string[]",
              "name": "symbols",
              "type": "string[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            },
            {
              "internalType": "uint8[]",
              "name": "decimals",
              "type": "uint8[]"
            },
            {
              "internalType": "uint128[]",
              "name": "TOKEN_BALANCE",
              "type": "uint128[]"
            },
            {
              "internalType": "uint128[]",
              "name": "CFMM_RESERVES",
              "type": "uint128[]"
            },
            {
              "internalType": "uint256",
              "name": "lastPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastFeeIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "utilizationRate",
              "type": "uint256"
            },
            {
              "internalType": "uint48",
              "name": "currBlockNumber",
              "type": "uint48"
            }
          ],
          "internalType": "struct IGammaPool.PoolData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastCFMMPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestCFMMBalances",
      "outputs": [
        {
          "internalType": "uint128[]",
          "name": "cfmmReserves",
          "type": "uint128[]"
        },
        {
          "internalType": "uint256",
          "name": "cfmmInvariant",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cfmmTotalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestCFMMReserves",
      "outputs": [
        {
          "internalType": "uint128[]",
          "name": "cfmmReserves",
          "type": "uint128[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPoolData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "poolId",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "protocolId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "longStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "shortStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidationStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "LP_TOKEN_BALANCE",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "LP_TOKEN_BORROWED",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "LP_TOKEN_BORROWED_PLUS_INTEREST",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "BORROWED_INVARIANT",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "LP_INVARIANT",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "cfmm",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "accFeeIndex",
              "type": "uint96"
            },
            {
              "internalType": "uint48",
              "name": "LAST_BLOCK_NUMBER",
              "type": "uint48"
            },
            {
              "internalType": "uint80",
              "name": "lastCFMMFeeIndex",
              "type": "uint80"
            },
            {
              "internalType": "uint128",
              "name": "lastCFMMInvariant",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "lastCFMMTotalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "string[]",
              "name": "symbols",
              "type": "string[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            },
            {
              "internalType": "uint8[]",
              "name": "decimals",
              "type": "uint8[]"
            },
            {
              "internalType": "uint128[]",
              "name": "TOKEN_BALANCE",
              "type": "uint128[]"
            },
            {
              "internalType": "uint128[]",
              "name": "CFMM_RESERVES",
              "type": "uint128[]"
            },
            {
              "internalType": "uint256",
              "name": "lastPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastFeeIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "utilizationRate",
              "type": "uint256"
            },
            {
              "internalType": "uint48",
              "name": "currBlockNumber",
              "type": "uint48"
            }
          ],
          "internalType": "struct IGammaPool.PoolData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestRates",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "accFeeIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastCFMMFeeIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastFeeIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "utilizationRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastBlockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currBlockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IGammaPool.RateData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLoanCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getLoans",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "poolId",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "rateIndex",
              "type": "uint96"
            },
            {
              "internalType": "uint128",
              "name": "initLiquidity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "lpTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint128[]",
              "name": "tokensHeld",
              "type": "uint128[]"
            },
            {
              "internalType": "uint256",
              "name": "px",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint8[]",
              "name": "decimals",
              "type": "uint8[]"
            },
            {
              "internalType": "string[]",
              "name": "symbols",
              "type": "string[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            }
          ],
          "internalType": "struct IGammaPool.LoanData[]",
          "name": "_loans",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolBalances",
      "outputs": [
        {
          "internalType": "uint128[]",
          "name": "tokenBalances",
          "type": "uint128[]"
        },
        {
          "internalType": "uint256",
          "name": "lpTokenBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lpTokenBorrowed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lpTokenBorrowedPlusInterest",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowedInvariant",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lpInvariant",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "poolId",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "protocolId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "longStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "shortStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidationStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "LP_TOKEN_BALANCE",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "LP_TOKEN_BORROWED",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "LP_TOKEN_BORROWED_PLUS_INTEREST",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "BORROWED_INVARIANT",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "LP_INVARIANT",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "cfmm",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "accFeeIndex",
              "type": "uint96"
            },
            {
              "internalType": "uint48",
              "name": "LAST_BLOCK_NUMBER",
              "type": "uint48"
            },
            {
              "internalType": "uint80",
              "name": "lastCFMMFeeIndex",
              "type": "uint80"
            },
            {
              "internalType": "uint128",
              "name": "lastCFMMInvariant",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "lastCFMMTotalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "string[]",
              "name": "symbols",
              "type": "string[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            },
            {
              "internalType": "uint8[]",
              "name": "decimals",
              "type": "uint8[]"
            },
            {
              "internalType": "uint128[]",
              "name": "TOKEN_BALANCE",
              "type": "uint128[]"
            },
            {
              "internalType": "uint128[]",
              "name": "CFMM_RESERVES",
              "type": "uint128[]"
            },
            {
              "internalType": "uint256",
              "name": "lastPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastFeeIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "utilizationRate",
              "type": "uint256"
            },
            {
              "internalType": "uint48",
              "name": "currBlockNumber",
              "type": "uint48"
            }
          ],
          "internalType": "struct IGammaPool.PoolData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "accFeeIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCFMMFeeIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastBlockNumber",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRebalanceDeltas",
      "outputs": [
        {
          "internalType": "int256[]",
          "name": "deltas",
          "type": "int256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokensMetaData",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "string[]",
          "name": "_symbols",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_names",
          "type": "string[]"
        },
        {
          "internalType": "uint8[]",
          "name": "_decimals",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "increaseCollateral",
      "outputs": [
        {
          "internalType": "uint128[]",
          "name": "tokensHeld",
          "type": "uint128[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_cfmm",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint8[]",
          "name": "_decimals",
          "type": "uint8[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "int256[]",
          "name": "",
          "type": "int256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "name": "liquidate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "loanLiquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "refund",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "liquidateWithLP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "loanLiquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "refund",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationStrategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loan",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "poolId",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "rateIndex",
              "type": "uint96"
            },
            {
              "internalType": "uint128",
              "name": "initLiquidity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "lpTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint128[]",
              "name": "tokensHeld",
              "type": "uint128[]"
            },
            {
              "internalType": "uint256",
              "name": "px",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint8[]",
              "name": "decimals",
              "type": "uint8[]"
            },
            {
              "internalType": "string[]",
              "name": "symbols",
              "type": "string[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            }
          ],
          "internalType": "struct IGammaPool.LoanData",
          "name": "_loanData",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "longStrategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolId",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "int256[]",
          "name": "",
          "type": "int256[]"
        }
      ],
      "name": "rebalanceCollateral",
      "outputs": [
        {
          "internalType": "uint128[]",
          "name": "tokensHeld",
          "type": "uint128[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "fees",
          "type": "uint256[]"
        }
      ],
      "name": "repayLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidityPaid",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_utilRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_borrowRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_accFeeIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lastPrice",
          "type": "uint256"
        }
      ],
      "name": "setLatestRates",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shortStrategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "skim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sync",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "posAddr",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "testSendTokensCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tester",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokens_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "updatePool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "utilRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "validateCFMM",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "withdrawNoPull",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "withdrawReserves",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "reserves",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "101:1392:9:-:0;;;271:233;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;420:11;433:8;443:13;458:14;474:20;2002:113:7;;;;;;;;;;;;;-1:-1:-1;;;2002:113:7;;;;;;;;;;;;;;;;-1:-1:-1;;;2002:113:7;;;2076:5;2068;:13;;;;;;:::i;:::-;-1:-1:-1;2091:7:7;:17;2101:7;2091;:17;:::i;:::-;-1:-1:-1;;;912:24:8::1;::::0;;::::1;;::::0;-1:-1:-1;;;;;946:18:8;;::::1;;::::0;974:28;;::::1;;::::0;1012:30;::::1;;::::0;1052:42:::1;;::::0;-1:-1:-1;101:1392:9;;-1:-1:-1;;;;101:1392:9;14:177:40;93:13;;-1:-1:-1;;;;;135:31:40;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:618::-;301:6;309;317;325;333;386:3;374:9;365:7;361:23;357:33;354:53;;;403:1;400;393:12;354:53;435:9;429:16;485:6;478:5;474:18;467:5;464:29;454:57;;507:1;504;497:12;454:57;530:5;-1:-1:-1;554:49:40;599:2;584:18;;554:49;:::i;:::-;544:59;;622:49;667:2;656:9;652:18;622:49;:::i;:::-;612:59;;690:49;735:2;724:9;720:18;690:49;:::i;:::-;680:59;;758:50;803:3;792:9;788:19;758:50;:::i;:::-;748:60;;196:618;;;;;;;;:::o;819:127::-;880:10;875:3;871:20;868:1;861:31;911:4;908:1;901:15;935:4;932:1;925:15;951:380;1030:1;1026:12;;;;1073;;;1094:61;;1148:4;1140:6;1136:17;1126:27;;1094:61;1201:2;1193:6;1190:14;1170:18;1167:38;1164:161;;1247:10;1242:3;1238:20;1235:1;1228:31;1282:4;1279:1;1272:15;1310:4;1307:1;1300:15;1164:161;;951:380;;;:::o;1462:545::-;1564:2;1559:3;1556:11;1553:448;;;1600:1;1625:5;1621:2;1614:17;1670:4;1666:2;1656:19;1740:2;1728:10;1724:19;1721:1;1717:27;1711:4;1707:38;1776:4;1764:10;1761:20;1758:47;;;-1:-1:-1;1799:4:40;1758:47;1854:2;1849:3;1845:12;1842:1;1838:20;1832:4;1828:31;1818:41;;1909:82;1927:2;1920:5;1917:13;1909:82;;;1972:17;;;1953:1;1942:13;1909:82;;;1913:3;;;1553:448;1462:545;;;:::o;2183:1352::-;2303:10;;-1:-1:-1;;;;;2325:30:40;;2322:56;;;2358:18;;:::i;:::-;2387:97;2477:6;2437:38;2469:4;2463:11;2437:38;:::i;:::-;2431:4;2387:97;:::i;:::-;2539:4;;2603:2;2592:14;;2620:1;2615:663;;;;3322:1;3339:6;3336:89;;;-1:-1:-1;3391:19:40;;;3385:26;3336:89;-1:-1:-1;;2140:1:40;2136:11;;;2132:24;2128:29;2118:40;2164:1;2160:11;;;2115:57;3438:81;;2585:944;;2615:663;1409:1;1402:14;;;1446:4;1433:18;;-1:-1:-1;;2651:20:40;;;2769:236;2783:7;2780:1;2777:14;2769:236;;;2872:19;;;2866:26;2851:42;;2964:27;;;;2932:1;2920:14;;;;2799:19;;2769:236;;;2773:3;3033:6;3024:7;3021:19;3018:201;;;3094:19;;;3088:26;-1:-1:-1;;3177:1:40;3173:14;;;3189:3;3169:24;3165:37;3161:42;3146:58;3131:74;;3018:201;-1:-1:-1;;;;;3265:1:40;3249:14;;;3245:22;3232:36;;-1:-1:-1;2183:1352:40:o;:::-;101:1392:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMapi;:::-;;;;;;;:::i;4457:197::-;;;;;;:::i;:::-;;:::i;:::-;;;1470:14:40;;1463:22;1445:41;;1433:2;1418:18;4457:197:7;1305:187:40;4837:259:8;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;929:262:9:-;;;;;;:::i;:::-;1062:8;:20;;;;1092:10;:24;;;;1126:11;:26;1162:9;:22;929:262;;;3268:106:7;3355:12;;3268:106;;4720:111:8;;;;;;:::i;:::-;-1:-1:-1;4822:2:8;;4720:111;5216:286:7;;;;;;:::i;:::-;;:::i;6058:205:8:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;6888:166::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;333:28::-;;;;;-1:-1:-1;;;;;333:28:8;;;;;;-1:-1:-1;;;;;5990:32:40;;;5972:51;;5960:2;5945:18;333:28:8;5826:203:40;3117:91:7;3199:2;3117:91;;;6206:4:40;6194:17;;;6176:36;;6164:2;6149:18;3117:91:7;6034:184:40;510:413:9;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5897:234:7:-;;;;;;:::i;:::-;;:::i;148:23:9:-;;;;;;1107:353:8;;;;;;:::i;:::-;;:::i;523:46::-;;;;;7959:101;;;;;;:::i;:::-;-1:-1:-1;8048:1:8;;8051;;7959:101;;;;;11765:25:40;;;11821:2;11806:18;;11799:34;;;;11738:18;7959:101:8;11591:248:40;1748:97:8;1811:7;1748:97;;1851:296;;;:::i;:::-;;;;;;;;;;;;:::i;5102:262::-;;;;;;:::i;:::-;;:::i;628:53::-;;;;;4604:110;;;;;;:::i;:::-;-1:-1:-1;4705:2:8;;4604:110;5536:123;;;:::i;7215:194::-;;;;;;:::i;:::-;;:::i;5370:143::-;;;:::i;208:26:9:-;;;;;;3432:125:7;;;;;;:::i;:::-;-1:-1:-1;;;;;3532:18:7;3506:7;3532:18;;;;;;;;;;;;3432:125;2728:84:8;2804:1;2728:84;;7060:149;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7582:207::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;688:21::-;;;;;-1:-1:-1;;;;;688:21:8;;;1577:165;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1197:294:9:-;;;:::i;:::-;;;;;;16992:4:40;17034:3;17023:9;17019:19;17011:27;;17071:6;17065:13;17054:9;17047:32;17135:4;17127:6;17123:17;17117:24;17110:4;17099:9;17095:20;17088:54;17198:4;17190:6;17186:17;17180:24;17173:4;17162:9;17158:20;17151:54;17261:4;17253:6;17249:17;17243:24;17236:4;17225:9;17221:20;17214:54;17324:4;17316:6;17312:17;17306:24;17299:4;17288:9;17284:20;17277:54;17387:4;17379:6;17375:17;17369:24;17362:4;17351:9;17347:20;17340:54;17450:4;17442:6;17438:17;17432:24;17425:4;17414:9;17410:20;17403:54;17513:4;17505:6;17501:17;17495:24;17488:4;17477:9;17473:20;17466:54;16846:680;;;;;575:47:8;;;;;715:20;;;;;-1:-1:-1;;;;;715:20:8;;;2391:102:7;;;:::i;2818:113:8:-;;;:::i;:::-;;;;;;;:::i;2353:165::-;;;;2501:1;22280:25:40;;2504:2:8;22336::40;22321:18;;22314:34;2508:2:8;22364:18:40;;;22357:34;;;;22268:2;22253:18;2353:165:8;22078:319:40;1466:105:8;;;:::i;:::-;;;;;;;:::i;6618:427:7:-;;;;;;:::i;:::-;;:::i;3753:189::-;;;;;;:::i;:::-;;:::i;6269:280:8:-;;;;;;:::i;:::-;;:::i;6555:146::-;;;;;;:::i;:::-;;:::i;7795:158::-;;;;;;:::i;:::-;;:::i;8350:48::-;;;;;;:::i;:::-;;;476:41;;;;;2153:194;;;:::i;:::-;;;;;;;;;:::i;177:25:9:-;;;;;;2524:198:8;;;:::i;427:43::-;;;;;;;;24711:6:40;24699:19;;;24681:38;;24669:2;24654:18;427:43:8;24537:188:40;4000:149:7;;;;;;:::i;:::-;;:::i;4327:253:8:-;;;;;;:::i;:::-;;:::i;6707:175::-;;;;;;:::i;:::-;;:::i;7415:161::-;;;;;;:::i;:::-;;:::i;4080:241::-;;;:::i;:::-;;;;;;;;;;:::i;367:24::-;;;;;;:::i;:::-;;:::i;397:::-;;;;;;:::i;:::-;;:::i;2180:98:7:-;2234:13;2266:5;2259:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:98;:::o;4457:197::-;4540:4;719:10:38;4594:32:7;719:10:38;4610:7:7;4619:6;4594:8;:32::i;:::-;4643:4;4636:11;;;4457:197;;;;;:::o;4837:259:8:-;4971:16;;;4985:1;4971:16;;;;;;;;;4907:25;;4934:14;;4971:16;;;;4907:25;;4971:16;;;;;-1:-1:-1;4971:16:8;4960:27;;5011:3;4997:8;5006:1;4997:11;;;;;;;;:::i;:::-;;;;;;:17;;;;;5038:3;5024:8;5033:1;5024:11;;;;;;;;:::i;:::-;;;;;;:17;;;;;5065:3;5051:8;5060:1;5051:11;;;;;;;;:::i;:::-;;;;;;;;;;:17;-1:-1:-1;4837:259:8;5087:2;;-1:-1:-1;4837:259:8:o;5216:286:7:-;5343:4;719:10:38;5399:38:7;5415:4;719:10:38;5430:6:7;5399:15;:38::i;:::-;5447:27;5457:4;5463:2;5467:6;5447:9;:27::i;:::-;-1:-1:-1;5491:4:7;;5216:286;-1:-1:-1;;;;5216:286:7:o;6058:205:8:-;6240:16;;;6254:1;6240:16;;;6162:24;6240:16;;;;;6218:2;;6162:24;;6240:16;6254:1;6240:16;;;;;;;;;;-1:-1:-1;6240:16:8;6230:26;;6058:205;;;;;:::o;6888:166::-;7031:16;;;7045:1;7031:16;;;6979:27;7031:16;;;;;6979:27;7031:16;;;;;;;;;;-1:-1:-1;;7018:29:8;6888:166;-1:-1:-1;;;;6888:166:8:o;510:413:9:-;572:25;;:::i;:::-;624:2;609:17;;655:4;;-1:-1:-1;;;;;655:4:9;636:16;;;;:23;;;;692:16;;706:1;692:16;;;;;;;;;;;;;;636;692;;;-1:-1:-1;;;669:20:9;;;:39;;;718:23;;744:1;;669:39;744:1;;718:23;;;;;;:::i;:::-;-1:-1:-1;;;;;718:27:9;;;:23;;;;;;;;;;:27;777:2;755:19;;;:24;810:2;789:18;;;:23;844:2;822:19;;;:24;882:2;856:23;;;:28;914:2;894:17;;;:22;755:9;510:413;-1:-1:-1;510:413:9:o;5897:234:7:-;5985:4;719:10:38;6039:64:7;719:10:38;6055:7:7;6092:10;6064:25;719:10:38;6055:7:7;6064:9;:25::i;:::-;:38;;;;:::i;:::-;6039:8;:64::i;1107:353:8:-;1250:4;:12;;-1:-1:-1;;;;;;1250:12:8;-1:-1:-1;;;;;1250:12:8;;;;;1272:17;:7;1282;;1272:17;:::i;:::-;-1:-1:-1;1299:21:8;:9;1311;;1299:21;:::i;:::-;;1361:10;-1:-1:-1;;;;;1339:40:8;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1330:6;:51;;-1:-1:-1;;;;;1330:51:8;;;;-1:-1:-1;;;;;;1330:51:8;;;;;;;;1391:5;:18;;;;;1399:10;1391:18;;;;1419:34;;1433:19;1419:5;:34::i;:::-;1107:353;;;;;;;:::o;1851:296::-;1917:30;1949:22;;;;;2122:1;2108:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2108:16:8;-1:-1:-1;2101:39:8;2126:1;;-1:-1:-1;2129:1:8;;-1:-1:-1;2132:1:8;;-1:-1:-1;2135:1:8;;-1:-1:-1;2138:1:8;;-1:-1:-1;1851:296:8;-1:-1:-1;1851:296:8:o;5102:262::-;5293:16;;;5307:1;5293:16;;;;;;;;;5229:25;;5256:14;;5293:16;;;;;;;;;;;-1:-1:-1;5293:16:8;5282:27;;5328:2;5319:11;;5340:17;5346:2;5350:6;5340:5;:17::i;:::-;5102:262;;;;;;;;;;:::o;5536:123::-;5592:15;5634:18;:12;5649:3;5634:18;:::i;:::-;5629:23;;:2;:23;:::i;:::-;5619:33;;5536:123;:::o;7215:194::-;7385:16;;;7399:1;7385:16;;;7339:23;7385:16;;;;;;7316:21;;7339:23;7382:1;;7385:16;;;;;;;;;;;;-1:-1:-1;7385:16:8;7374:28;;;;7215:194;;;;;;;;:::o;5370:143::-;5490:16;;;5504:1;5490:16;;;5442:29;5490:16;;;;;5442:29;5490:16;;;;;;;;;;-1:-1:-1;5490:16:8;5483:23;;5370:143;:::o;7060:149::-;7144:22;7200:1;7187:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7187:15:8;-1:-1:-1;7178:24:8;7060:149;-1:-1:-1;;7060:149:8:o;7582:207::-;7765:16;;;7779:1;7765:16;;;7716:23;7765:16;;;;;;7663:26;;;;7716:23;;7759:1;;7762;;7765:16;;;;;;;;;;;;-1:-1:-1;7765:16:8;7751:31;;;;;;7582:207;;;;;:::o;1577:165::-;1706:28;;;1732:1;1706:28;;;;;;;;;1652:35;;1706:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;1699:36:8;1577:165;-1:-1:-1;;;1577:165:8:o;1197:294:9:-;1262:20;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1262:20:9;1317:8;;1294:20;;;:31;1353:10;;1335:15;;;:28;1392:11;;1373:30;;1436:12;1413:20;;;:35;1475:9;;1458:14;;;:26;1294:4;1197:294::o;2391:102:7:-;2447:13;2479:7;2472:14;;;;;:::i;2818:113:8:-;2871:20;;:::i;:::-;2910:14;:12;:14::i;1466:105::-;1523:16;1557:7;1550:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1550:14:8;;;;;;;;;;;;;;;;;;;;;;1466:105;:::o;6618:427:7:-;6711:4;719:10:38;6711:4:7;6792:25;719:10:38;6809:7:7;6792:9;:25::i;:::-;6765:52;;6855:15;6835:16;:35;;6827:85;;;;-1:-1:-1;;;6827:85:7;;29562:2:40;6827:85:7;;;29544:21:40;29601:2;29581:18;;;29574:30;29640:34;29620:18;;;29613:62;-1:-1:-1;;;29691:18:40;;;29684:35;29736:19;;6827:85:7;;;;;;;;;6946:60;6955:5;6962:7;6990:15;6971:16;:34;6946:8;:60::i;3753:189::-;3832:4;719:10:38;3886:28:7;719:10:38;3903:2:7;3907:6;3886:9;:28::i;6269:280:8:-;6370:21;6393:24;6480:1;6465:16;;:40;;6504:1;6465:40;;;6494:4;;6499:1;6494:7;;;;;;;:::i;:::-;;;;;;;6484:4;;6489:1;6484:7;;;;;;;:::i;:::-;;;;;;;:17;;;;:::i;:::-;6445:16;6450:4;6445:2;:16;:::i;:::-;:61;;;;:::i;:::-;6526:16;;;6540:1;6526:16;;;;;;;;6429:77;;-1:-1:-1;6526:16:8;6540:1;6526:16;;;;;;;;;;-1:-1:-1;6526:16:8;6516:26;;6269:280;;;;;;;:::o;6555:146::-;6626:27;6692:1;6678:16;;7795:158;7929:16;;;7943:1;7929:16;;;7893;7929;;;;;7893;7929;;;;;;;;;;-1:-1:-1;;7921:25:8;7795:158;-1:-1:-1;;;;;;7795:158:8:o;2153:194::-;2315:16;;;2329:1;2315:16;;;2219:29;2315:16;;;;;;2250:21;;;;2315:16;;;;;;;;;;;;-1:-1:-1;;2308:32:8;2333:2;;-1:-1:-1;2337:2:8;;-1:-1:-1;2153:194:8;-1:-1:-1;2153:194:8:o;2524:198::-;2692:16;;;2706:1;2692:16;;;2596:29;2692:16;;;;;;2627:21;;;;2692:16;;;;;;;;;;;;-1:-1:-1;;2685:30:8;2710:1;;-1:-1:-1;2713:1:8;;-1:-1:-1;2524:198:8;-1:-1:-1;2524:198:8:o;4000:149:7:-;-1:-1:-1;;;;;4115:18:7;;;4089:7;4115:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4000:149::o;4327:253:8:-;4495:78;;-1:-1:-1;;;4495:78:8;;-1:-1:-1;;;;;4495:47:8;;;;;:78;;4543:7;;;;4552;;;;4561:5;;4568:4;;;;4495:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4327:253;;;;;;;;:::o;6707:175::-;6859:16;;;6873:1;6859:16;;;;;;;;;6807:27;;6859:16;;;;;;;;;;-1:-1:-1;;6846:29:8;6707:175;-1:-1:-1;;;;;6707:175:8:o;7415:161::-;7552:16;;;7549:1;7552:16;;;7506:23;7552:16;;;;;;7483:21;;7506:23;7549:1;7552:16;;;;;;;;;;;;-1:-1:-1;7552:16:8;7541:28;;;;7415:161;;;:::o;4080:241::-;4250:16;;;4264:1;4250:16;;;;;;;;;4131:24;;;;;;;;4250:16;;;;;;;;;;-1:-1:-1;;4267:15:8;;;4280:1;4267:15;;;;;;;;;;-1:-1:-1;4267:15:8;;;;;;;;;;;;;;;;;-1:-1:-1;;4283:15:8;;;4296:1;4283:15;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4299:14:8;;;4311:1;4299:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4299:14:8;4243:71;;;;;;;;4080:241;;;;:::o;367:24::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;367:24:8;;-1:-1:-1;367:24:8;:::o;397:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10110:370:7:-;-1:-1:-1;;;;;10241:19:7;;10233:68;;;;-1:-1:-1;;;10233:68:7;;31575:2:40;10233:68:7;;;31557:21:40;31614:2;31594:18;;;31587:30;31653:34;31633:18;;;31626:62;-1:-1:-1;;;31704:18:40;;;31697:34;31748:19;;10233:68:7;31373:400:40;10233:68:7;-1:-1:-1;;;;;10319:21:7;;10311:68;;;;-1:-1:-1;;;10311:68:7;;31980:2:40;10311:68:7;;;31962:21:40;32019:2;31999:18;;;31992:30;32058:34;32038:18;;;32031:62;-1:-1:-1;;;32109:18:40;;;32102:32;32151:19;;10311:68:7;31778:398:40;10311:68:7;-1:-1:-1;;;;;10390:18:7;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;160:25:40;;;10441:32:7;;133:18:40;10441:32:7;;;;;;;10110:370;;;:::o;10761:429::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:7;:37;10953:231;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:7;;32383:2:40;11010:68:7;;;32365:21:40;32422:2;32402:18;;;32395:30;32461:31;32441:18;;;32434:59;32510:18;;11010:68:7;32181:353:40;11010:68:7;11112:51;11121:5;11128:7;11156:6;11137:16;:25;11112:8;:51::i;:::-;10881:309;10761:429;;;:::o;7499:639::-;-1:-1:-1;;;;;7625:18:7;;7617:68;;;;-1:-1:-1;;;7617:68:7;;32741:2:40;7617:68:7;;;32723:21:40;32780:2;32760:18;;;32753:30;32819:34;32799:18;;;32792:62;-1:-1:-1;;;32870:18:40;;;32863:35;32915:19;;7617:68:7;32539:401:40;7617:68:7;-1:-1:-1;;;;;7703:16:7;;7695:64;;;;-1:-1:-1;;;7695:64:7;;33147:2:40;7695:64:7;;;33129:21:40;33186:2;33166:18;;;33159:30;33225:34;33205:18;;;33198:62;-1:-1:-1;;;33276:18:40;;;33269:33;33319:19;;7695:64:7;32945:399:40;7695:64:7;-1:-1:-1;;;;;7841:15:7;;7819:19;7841:15;;;;;;;;;;;7874:21;;;;7866:72;;;;-1:-1:-1;;;7866:72:7;;33551:2:40;7866:72:7;;;33533:21:40;33590:2;33570:18;;;33563:30;33629:34;33609:18;;;33602:62;-1:-1:-1;;;33680:18:40;;;33673:36;33726:19;;7866:72:7;33349:402:40;7866:72:7;-1:-1:-1;;;;;7964:15:7;;;:9;:15;;;;;;;;;;;7982:20;;;7964:38;;8018:13;;;;;;;;:23;;7996:6;;7964:9;8018:23;;7996:6;;8018:23;:::i;:::-;;;;;;;;8072:2;-1:-1:-1;;;;;8057:26:7;8066:4;-1:-1:-1;;;;;8057:26:7;;8076:6;8057:26;;;;160:25:40;;148:2;133:18;;14:177;8057:26:7;;;;;;;;8094:37;11774:121;8414:389;-1:-1:-1;;;;;8497:21:7;;8489:65;;;;-1:-1:-1;;;8489:65:7;;33958:2:40;8489:65:7;;;33940:21:40;33997:2;33977:18;;;33970:30;34036:33;34016:18;;;34009:61;34087:18;;8489:65:7;33756:355:40;8489:65:7;8641:6;8625:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8657:18:7;;:9;:18;;;;;;;;;;:28;;8679:6;;8657:9;:28;;8679:6;;8657:28;:::i;:::-;;;;-1:-1:-1;;8700:37:7;;160:25:40;;;-1:-1:-1;;;;;8700:37:7;;;8717:1;;8700:37;;148:2:40;133:18;8700:37:7;;;;;;;8414:389;;:::o;3182:892:8:-;3236:20;;:::i;:::-;3290:4;3268:27;;3305:28;3323:10;3305:28;:15;;;:28;3363:12;-1:-1:-1;;;;;3343:32:8;;;:17;;;:32;3406:13;3385:34;;:18;;;:34;3456:19;3429:46;;:24;;;:46;3497:4;;;;;3485:9;;;:16;3536:2;3511:22;;;:27;3563:7;3548:22;;;:12;;;:22;3497:4;-1:-1:-1;3580:21:8;;:25;3640:1;-1:-1:-1;3615:22:8;;:26;3690:1;3497:4;3651:36;;:40;3727:1;3701:23;;;:27;3738:17;;;:21;3788:1;3769:16;;;:20;3824:2;3799:22;;;:27;3863:2;3836:24;;;:29;3894:13;3355:12:7;;;3268:106;3894:13:8;3875:16;;;:32;3933:9;3917:25;;;;;;;;;;;;;;;;;;;;3933:9;3917:25;;;3933:9;3917:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:4;:13;;:25;;;;3966:7;3952:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3952:21:8;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3952:11:8;;;:21;4004:16;;;4018:1;4004:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3983:18:8;;;:37;4051:16;;;4065:1;4051:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4030:18:8;;;:37;:18;3182:892::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;196:423:40;238:3;276:5;270:12;303:6;298:3;291:19;328:1;338:162;352:6;349:1;346:13;338:162;;;414:4;470:13;;;466:22;;460:29;442:11;;;438:20;;431:59;367:12;338:162;;;342:3;545:1;538:4;529:6;524:3;520:16;516:27;509:38;608:4;601:2;597:7;592:2;584:6;580:15;576:29;571:3;567:39;563:50;556:57;;;196:423;;;;:::o;624:220::-;773:2;762:9;755:21;736:4;793:45;834:2;823:9;819:18;811:6;793:45;:::i;:::-;785:53;624:220;-1:-1:-1;;;624:220:40:o;849:131::-;-1:-1:-1;;;;;924:31:40;;914:42;;904:70;;970:1;967;960:12;985:315;1053:6;1061;1114:2;1102:9;1093:7;1089:23;1085:32;1082:52;;;1130:1;1127;1120:12;1082:52;1169:9;1156:23;1188:31;1213:5;1188:31;:::i;:::-;1238:5;1290:2;1275:18;;;;1262:32;;-1:-1:-1;;;985:315:40:o;1497:247::-;1556:6;1609:2;1597:9;1588:7;1584:23;1580:32;1577:52;;;1625:1;1622;1615:12;1577:52;1664:9;1651:23;1683:31;1708:5;1683:31;:::i;1749:435::-;1802:3;1840:5;1834:12;1867:6;1862:3;1855:19;1893:4;1922:2;1917:3;1913:12;1906:19;;1959:2;1952:5;1948:14;1980:1;1990:169;2004:6;2001:1;1998:13;1990:169;;;2065:13;;2053:26;;2099:12;;;;2134:15;;;;2026:1;2019:9;1990:169;;;-1:-1:-1;2175:3:40;;1749:435;-1:-1:-1;;;;;1749:435:40:o;2189:332::-;2396:2;2385:9;2378:21;2359:4;2416:56;2468:2;2457:9;2453:18;2445:6;2416:56;:::i;:::-;2408:64;;2508:6;2503:2;2492:9;2488:18;2481:34;2189:332;;;;;:::o;2526:385::-;2612:6;2620;2628;2636;2689:3;2677:9;2668:7;2664:23;2660:33;2657:53;;;2706:1;2703;2696:12;2657:53;-1:-1:-1;;2729:23:40;;;2799:2;2784:18;;2771:32;;-1:-1:-1;2850:2:40;2835:18;;2822:32;;2901:2;2886:18;2873:32;;-1:-1:-1;2526:385:40;-1:-1:-1;2526:385:40:o;2916:456::-;2993:6;3001;3009;3062:2;3050:9;3041:7;3037:23;3033:32;3030:52;;;3078:1;3075;3068:12;3030:52;3117:9;3104:23;3136:31;3161:5;3136:31;:::i;:::-;3186:5;-1:-1:-1;3243:2:40;3228:18;;3215:32;3256:33;3215:32;3256:33;:::i;:::-;2916:456;;3308:7;;-1:-1:-1;;;3362:2:40;3347:18;;;;3334:32;;2916:456::o;3377:248::-;3445:6;3453;3506:2;3494:9;3485:7;3481:23;3477:32;3474:52;;;3522:1;3519;3512:12;3474:52;-1:-1:-1;;3545:23:40;;;3615:2;3600:18;;;3587:32;;-1:-1:-1;3377:248:40:o;3630:332::-;3837:6;3826:9;3819:25;3880:2;3875;3864:9;3860:18;3853:30;3800:4;3900:56;3952:2;3941:9;3937:18;3929:6;3900:56;:::i;:::-;3892:64;3630:332;-1:-1:-1;;;;3630:332:40:o;3967:366::-;4029:8;4039:6;4093:3;4086:4;4078:6;4074:17;4070:27;4060:55;;4111:1;4108;4101:12;4060:55;-1:-1:-1;4134:20:40;;4177:18;4166:30;;4163:50;;;4209:1;4206;4199:12;4163:50;4246:4;4238:6;4234:17;4222:29;;4306:3;4299:4;4289:6;4286:1;4282:14;4274:6;4270:27;4266:38;4263:47;4260:67;;;4323:1;4320;4313:12;4260:67;3967:366;;;;;:::o;4338:503::-;4432:6;4440;4448;4501:2;4489:9;4480:7;4476:23;4472:32;4469:52;;;4517:1;4514;4507:12;4469:52;4553:9;4540:23;4530:33;;4614:2;4603:9;4599:18;4586:32;4641:18;4633:6;4630:30;4627:50;;;4673:1;4670;4663:12;4627:50;4712:69;4773:7;4764:6;4753:9;4749:22;4712:69;:::i;:::-;4338:503;;4800:8;;-1:-1:-1;4686:95:40;;-1:-1:-1;;;;4338:503:40:o;4970:476::-;5023:3;5061:5;5055:12;5088:6;5083:3;5076:19;5114:4;5143:2;5138:3;5134:12;5127:19;;5180:2;5173:5;5169:14;5201:1;5211:210;5225:6;5222:1;5219:13;5211:210;;;5290:13;;-1:-1:-1;;;;;5286:54:40;5274:67;;5361:12;;;;5396:15;;;;5247:1;5240:9;5211:210;;5451:261;5630:2;5619:9;5612:21;5593:4;5650:56;5702:2;5691:9;5687:18;5679:6;5650:56;:::i;6223:180::-;6282:6;6335:2;6323:9;6314:7;6310:23;6306:32;6303:52;;;6351:1;6348;6341:12;6303:52;-1:-1:-1;6374:23:40;;6223:180;-1:-1:-1;6223:180:40:o;6523:461::-;6576:3;6614:5;6608:12;6641:6;6636:3;6629:19;6667:4;6696:2;6691:3;6687:12;6680:19;;6733:2;6726:5;6722:14;6754:1;6764:195;6778:6;6775:1;6772:13;6764:195;;;6843:13;;-1:-1:-1;;;;;6839:39:40;6827:52;;6899:12;;;;6934:15;;;;6875:1;6793:9;6764:195;;6989:444;7040:3;7078:5;7072:12;7105:6;7100:3;7093:19;7131:4;7160:2;7155:3;7151:12;7144:19;;7197:2;7190:5;7186:14;7218:1;7228:180;7242:6;7239:1;7236:13;7228:180;;;7307:13;;7322:4;7303:24;7291:37;;7348:12;;;;7383:15;;;;7264:1;7257:9;7228:180;;7438:616;7490:3;7528:5;7522:12;7555:6;7550:3;7543:19;7581:4;7622:2;7617:3;7613:12;7647:11;7674;7667:18;;7724:6;7721:1;7717:14;7710:5;7706:26;7694:38;;7766:2;7759:5;7755:14;7787:1;7797:231;7811:6;7808:1;7805:13;7797:231;;;7882:5;7876:4;7872:16;7867:3;7860:29;7910:38;7943:4;7934:6;7928:13;7910:38;:::i;:::-;8006:12;;;;7902:46;-1:-1:-1;7971:15:40;;;;7833:1;7826:9;7797:231;;;-1:-1:-1;8044:4:40;;7438:616;-1:-1:-1;;;;;;;7438:616:40:o;8059:1710::-;8110:3;8138:6;8171:5;8165:12;8160:3;8153:25;8227:4;8220:5;8216:16;8210:23;8203:4;8198:3;8194:14;8187:47;8280:4;8273:5;8269:16;8263:23;8295:48;8337:4;8332:3;8328:14;8314:12;-1:-1:-1;;;;;5783:31:40;5771:44;;5717:104;8295:48;;8391:4;8384:5;8380:16;8374:23;8406:49;8449:4;8444:3;8440:14;8424;-1:-1:-1;;;;;6473:38:40;6461:51;;6408:110;8406:49;;8503:4;8496:5;8492:16;8486:23;8518:50;8562:4;8557:3;8553:14;8537;-1:-1:-1;;;;;4912:46:40;4900:59;;4846:119;8518:50;;8616:4;8609:5;8605:16;8599:23;8631:50;8675:4;8670:3;8666:14;8650;-1:-1:-1;;;;;4912:46:40;4900:59;;4846:119;8631:50;;8730:4;8723:5;8719:16;8713:23;8706:4;8701:3;8697:14;8690:47;8785:4;8778:5;8774:16;8768:23;8823:2;8816:4;8811:3;8807:14;8800:26;8847:58;8901:2;8896:3;8892:12;8876:14;8847:58;:::i;:::-;8835:70;;;8924:6;8977:2;8970:5;8966:14;8960:21;8955:2;8950:3;8946:12;8939:43;;9001:6;9055:2;9048:5;9044:14;9038:21;9099:3;9093:4;9089:14;9084:2;9079:3;9075:12;9068:36;9127:50;9172:4;9156:14;9127:50;:::i;:::-;9113:64;;;;9196:6;9250:2;9243:5;9239:14;9233:21;9296:3;9288:6;9284:16;9279:2;9274:3;9270:12;9263:38;9324:50;9367:6;9351:14;9324:50;:::i;:::-;9310:64;;;;9393:6;9447:2;9440:5;9436:14;9430:21;9493:3;9485:6;9481:16;9476:2;9471:3;9467:12;9460:38;9521:51;9565:6;9549:14;9521:51;:::i;:::-;9507:65;;;;9591:6;9645:2;9638:5;9634:14;9628:21;9691:3;9683:6;9679:16;9674:2;9669:3;9665:12;9658:38;9712:51;9756:6;9740:14;9712:51;:::i;:::-;9705:58;8059:1710;-1:-1:-1;;;;;;8059:1710:40:o;9774:263::-;9957:2;9946:9;9939:21;9920:4;9977:54;10027:2;10016:9;10012:18;10004:6;9977:54;:::i;10042:347::-;10093:8;10103:6;10157:3;10150:4;10142:6;10138:17;10134:27;10124:55;;10175:1;10172;10165:12;10124:55;-1:-1:-1;10198:20:40;;10241:18;10230:30;;10227:50;;;10273:1;10270;10263:12;10227:50;10310:4;10302:6;10298:17;10286:29;;10362:3;10355:4;10346:6;10338;10334:19;10330:30;10327:39;10324:59;;;10379:1;10376;10369:12;10394:1192;10543:6;10551;10559;10567;10575;10583;10591;10644:3;10632:9;10623:7;10619:23;10615:33;10612:53;;;10661:1;10658;10651:12;10612:53;10700:9;10687:23;10719:31;10744:5;10719:31;:::i;:::-;10769:5;-1:-1:-1;10825:2:40;10810:18;;10797:32;10848:18;10878:14;;;10875:34;;;10905:1;10902;10895:12;10875:34;10944:69;11005:7;10996:6;10985:9;10981:22;10944:69;:::i;:::-;11032:8;;-1:-1:-1;10918:95:40;-1:-1:-1;11120:2:40;11105:18;;11092:32;;-1:-1:-1;11136:16:40;;;11133:36;;;11165:1;11162;11155:12;11133:36;11204:71;11267:7;11256:8;11245:9;11241:24;11204:71;:::i;:::-;11294:8;;-1:-1:-1;11178:97:40;-1:-1:-1;11382:2:40;11367:18;;11354:32;;-1:-1:-1;11398:16:40;;;11395:36;;;11427:1;11424;11417:12;11395:36;;11466:60;11518:7;11507:8;11496:9;11492:24;11466:60;:::i;:::-;10394:1192;;;;-1:-1:-1;10394:1192:40;;-1:-1:-1;10394:1192:40;;;;11440:86;;-1:-1:-1;;;10394:1192:40:o;11844:620::-;12163:3;12152:9;12145:22;12126:4;12184:57;12236:3;12225:9;12221:19;12213:6;12184:57;:::i;:::-;12272:2;12257:18;;12250:34;;;;-1:-1:-1;12315:2:40;12300:18;;12293:34;;;;12358:2;12343:18;;12336:34;;;;12401:3;12386:19;;12379:35;12445:3;12430:19;;;12423:35;12176:65;11844:620;-1:-1:-1;11844:620:40:o;13668:838::-;13798:6;13806;13814;13822;13830;13883:2;13871:9;13862:7;13858:23;13854:32;13851:52;;;13899:1;13896;13889:12;13851:52;13935:9;13922:23;13912:33;;13996:2;13985:9;13981:18;13968:32;14019:18;14060:2;14052:6;14049:14;14046:34;;;14076:1;14073;14066:12;14046:34;14115:69;14176:7;14167:6;14156:9;14152:22;14115:69;:::i;:::-;14203:8;;-1:-1:-1;14089:95:40;-1:-1:-1;14291:2:40;14276:18;;14263:32;;-1:-1:-1;14307:16:40;;;14304:36;;;14336:1;14333;14326:12;14304:36;;14375:71;14438:7;14427:8;14416:9;14412:24;14375:71;:::i;:::-;13668:838;;;;-1:-1:-1;13668:838:40;;-1:-1:-1;14465:8:40;;14349:97;13668:838;-1:-1:-1;;;13668:838:40:o;14511:630::-;14680:2;14732:21;;;14802:13;;14705:18;;;14824:22;;;14651:4;;14680:2;14903:15;;;;14877:2;14862:18;;;14651:4;14946:169;14960:6;14957:1;14954:13;14946:169;;;15021:13;;15009:26;;15090:15;;;;15055:12;;;;14982:1;14975:9;14946:169;;;-1:-1:-1;15132:3:40;;14511:630;-1:-1:-1;;;;;;14511:630:40:o;15146:436::-;15232:6;15240;15293:2;15281:9;15272:7;15268:23;15264:32;15261:52;;;15309:1;15306;15299:12;15261:52;15349:9;15336:23;15382:18;15374:6;15371:30;15368:50;;;15414:1;15411;15404:12;15368:50;15453:69;15514:7;15505:6;15494:9;15490:22;15453:69;:::i;:::-;15541:8;;15427:95;;-1:-1:-1;15146:436:40;-1:-1:-1;;;;15146:436:40:o;15587:403::-;15822:6;15811:9;15804:25;15865:6;15860:2;15849:9;15845:18;15838:34;15908:2;15903;15892:9;15888:18;15881:30;15785:4;15928:56;15980:2;15969:9;15965:18;15957:6;15928:56;:::i;:::-;15920:64;15587:403;-1:-1:-1;;;;;15587:403:40:o;15995:846::-;16191:4;16220:2;16260;16249:9;16245:18;16290:2;16279:9;16272:21;16313:6;16348;16342:13;16379:6;16371;16364:22;16417:2;16406:9;16402:18;16395:25;;16479:2;16469:6;16466:1;16462:14;16451:9;16447:30;16443:39;16429:53;;16517:2;16509:6;16505:15;16538:1;16548:264;16562:6;16559:1;16556:13;16548:264;;;16655:2;16651:7;16639:9;16631:6;16627:22;16623:36;16618:3;16611:49;16683;16725:6;16716;16710:13;16683:49;:::i;:::-;16673:59;-1:-1:-1;16790:12:40;;;;16755:15;;;;16584:1;16577:9;16548:264;;;-1:-1:-1;16829:6:40;;15995:846;-1:-1:-1;;;;;;;15995:846:40:o;17840:4233::-;18023:2;18012:9;18005:21;18035:53;18084:2;18073:9;18069:18;18060:6;18054:13;-1:-1:-1;;;;;5783:31:40;5771:44;;5717:104;18035:53;17986:4;18135:2;18127:6;18123:15;18117:22;18148:51;18195:2;18184:9;18180:18;18166:12;17607:6;17596:18;17584:31;;17531:90;18148:51;-1:-1:-1;18248:2:40;18236:15;;18230:22;-1:-1:-1;;;;;5783:31:40;;18311:2;18296:18;;5771:44;-1:-1:-1;18364:2:40;18352:15;;18346:22;-1:-1:-1;;;;;5783:31:40;;18427:3;18412:19;;5771:44;-1:-1:-1;18481:3:40;18469:16;;18463:23;-1:-1:-1;;;;;5783:31:40;;18545:3;18530:19;;5771:44;-1:-1:-1;18599:3:40;18587:16;;18581:23;-1:-1:-1;;;;;5783:31:40;;18663:3;18648:19;;5771:44;-1:-1:-1;18723:3:40;18711:16;;18705:23;18699:3;18684:19;;;18677:52;;;;18754:16;;18748:23;18790:3;18809:18;;;18802:30;;;;18857:15;;18851:22;18892:3;18911:18;;;18904:30;;;;18971:15;;18965:22;19006:3;19018:54;19053:18;;;18965:22;-1:-1:-1;;;;;4912:46:40;4900:59;;4846:119;19018:54;19109:15;;19103:22;;-1:-1:-1;19144:3:40;19156:54;19191:18;;;19103:22;-1:-1:-1;;;;;4912:46:40;4900:59;;4846:119;19156:54;19247:15;;19241:22;;-1:-1:-1;19282:3:40;19294:54;19329:18;;;19241:22;-1:-1:-1;;;;;5783:31:40;5771:44;;5717:104;19294:54;19385:15;;19379:22;;-1:-1:-1;19420:3:40;19432:53;19466:18;;;19379:22;-1:-1:-1;;;;;6473:38:40;6461:51;;6408:110;19432:53;19522:15;;19516:22;;-1:-1:-1;19557:3:40;19569:53;19603:18;;;19516:22;17702:14;17691:26;17679:39;;17626:98;19569:53;19660:15;;19654:22;;-1:-1:-1;19696:3:40;19708:55;19743:19;;;19654:22;17805;17794:34;17782:47;;17729:106;19708:55;19801:16;;19795:23;;-1:-1:-1;19838:3:40;19850:56;19886:19;;;19795:23;-1:-1:-1;;;;;4912:46:40;4900:59;;4846:119;19850:56;19932:16;;19926:23;19969:3;19988:19;;;19981:32;;;;20039:16;;20033:23;20076:3;20095:19;;;20088:32;;;;20158:16;;20152:23;20195:6;20221:3;20240:19;;;20233:32;;;20152:23;;-1:-1:-1;20195:6:40;20288:66;20349:3;20334:19;;20152:23;20288:66;:::i;:::-;20274:80;;20404:3;20396:6;20392:16;20386:23;20363:46;;20433:2;20429:7;20456:3;20524;20512:9;20504:6;20500:22;20496:32;20490:3;20479:9;20475:19;20468:61;20552:52;20597:6;20580:15;20552:52;:::i;:::-;20538:66;;20654:3;20646:6;20642:16;20636:23;20613:46;;;20679:3;20747;20735:9;20727:6;20723:22;20719:32;20713:3;20702:9;20698:19;20691:61;20775:52;20820:6;20803:15;20775:52;:::i;:::-;20761:66;;20877:3;20869:6;20865:16;20859:23;20836:46;;;20902:3;20970;20958:9;20950:6;20946:22;20942:32;20936:3;20925:9;20921:19;20914:61;20998:51;21042:6;21025:15;20998:51;:::i;:::-;20984:65;;21099:3;21091:6;21087:16;21081:23;21058:46;;;21124:3;21192;21180:9;21172:6;21168:22;21164:32;21158:3;21147:9;21143:19;21136:61;21220:53;21266:6;21249:15;21220:53;:::i;:::-;21206:67;;21323:3;21315:6;21311:16;21305:23;21282:46;;;21348:3;21416;21404:9;21396:6;21392:22;21388:32;21382:3;21371:9;21367:19;21360:61;21444:53;21490:6;21473:15;21444:53;:::i;:::-;21523:16;;;21517:23;21560:3;21579:19;;;21572:32;;;;21630:16;;21624:23;21667:3;21686:19;;;21679:32;;;;21737:16;;21731:23;21774:3;21793:19;;;21786:32;;;;21844:16;;21838:23;21881:3;21900:19;;;21893:32;;;;21963:16;;21957:23;17702:14;17691:26;;22024:19;;;17679:39;21523:16;;-1:-1:-1;21957:23:40;-1:-1:-1;21989:55:40;;-1:-1:-1;17626:98:40;21989:55;-1:-1:-1;22061:6:40;;17840:4233;-1:-1:-1;;;;17840:4233:40:o;22402:261::-;22581:2;22570:9;22563:21;22544:4;22601:56;22653:2;22642:9;22638:18;22630:6;22601:56;:::i;22668:572::-;22772:6;22780;22788;22796;22849:2;22837:9;22828:7;22824:23;22820:32;22817:52;;;22865:1;22862;22855:12;22817:52;22901:9;22888:23;22878:33;;22958:2;22947:9;22943:18;22930:32;22920:42;;23013:2;23002:9;22998:18;22985:32;23040:18;23032:6;23029:30;23026:50;;;23072:1;23069;23062:12;23026:50;23111:69;23172:7;23163:6;23152:9;23148:22;23111:69;:::i;:::-;22668:572;;;;-1:-1:-1;23199:8:40;-1:-1:-1;;;;22668:572:40:o;23245:879::-;23360:6;23368;23376;23384;23392;23445:2;23433:9;23424:7;23420:23;23416:32;23413:52;;;23461:1;23458;23451:12;23413:52;23501:9;23488:23;23530:18;23571:2;23563:6;23560:14;23557:34;;;23587:1;23584;23577:12;23557:34;23626:69;23687:7;23678:6;23667:9;23663:22;23626:69;:::i;:::-;23714:8;;-1:-1:-1;23600:95:40;-1:-1:-1;23799:2:40;23784:18;;23771:32;;-1:-1:-1;23812:31:40;23771:32;23812:31;:::i;:::-;23862:5;;-1:-1:-1;23920:2:40;23905:18;;23892:32;;23936:16;;;23933:36;;;23965:1;23962;23955:12;23933:36;;24004:60;24056:7;24045:8;24034:9;24030:24;24004:60;:::i;24129:403::-;24364:2;24353:9;24346:21;24327:4;24384:56;24436:2;24425:9;24421:18;24413:6;24384:56;:::i;:::-;24471:2;24456:18;;24449:34;;;;-1:-1:-1;24514:2:40;24499:18;24492:34;24376:64;24129:403;-1:-1:-1;24129:403:40:o;24730:388::-;24798:6;24806;24859:2;24847:9;24838:7;24834:23;24830:32;24827:52;;;24875:1;24872;24865:12;24827:52;24914:9;24901:23;24933:31;24958:5;24933:31;:::i;:::-;24983:5;-1:-1:-1;25040:2:40;25025:18;;25012:32;25053:33;25012:32;25053:33;:::i;:::-;25105:7;25095:17;;;24730:388;;;;;:::o;25123:1336::-;25283:6;25291;25299;25307;25315;25323;25331;25339;25392:3;25380:9;25371:7;25367:23;25363:33;25360:53;;;25409:1;25406;25399:12;25360:53;25448:9;25435:23;25467:31;25492:5;25467:31;:::i;:::-;25517:5;-1:-1:-1;25573:2:40;25558:18;;25545:32;25596:18;25626:14;;;25623:34;;;25653:1;25650;25643:12;25623:34;25692:69;25753:7;25744:6;25733:9;25729:22;25692:69;:::i;:::-;25780:8;;-1:-1:-1;25666:95:40;-1:-1:-1;25868:2:40;25853:18;;25840:32;;-1:-1:-1;25884:16:40;;;25881:36;;;25913:1;25910;25903:12;25881:36;25952:71;26015:7;26004:8;25993:9;25989:24;25952:71;:::i;:::-;26042:8;;-1:-1:-1;25926:97:40;-1:-1:-1;26129:2:40;26114:18;;26101:32;;-1:-1:-1;26142:33:40;26101:32;26142:33;:::i;:::-;26194:7;;-1:-1:-1;26254:3:40;26239:19;;26226:33;;26271:16;;;26268:36;;;26300:1;26297;26290:12;26268:36;;26339:60;26391:7;26380:8;26369:9;26365:24;26339:60;:::i;:::-;25123:1336;;;;-1:-1:-1;25123:1336:40;;-1:-1:-1;25123:1336:40;;;;;;26418:8;-1:-1:-1;;;25123:1336:40:o;26464:639::-;26568:6;26576;26584;26592;26645:2;26633:9;26624:7;26620:23;26616:32;26613:52;;;26661:1;26658;26651:12;26613:52;26697:9;26684:23;26674:33;;26758:2;26747:9;26743:18;26730:32;26785:18;26777:6;26774:30;26771:50;;;26817:1;26814;26807:12;26771:50;26856:69;26917:7;26908:6;26897:9;26893:22;26856:69;:::i;:::-;26944:8;;-1:-1:-1;26830:95:40;-1:-1:-1;;27029:2:40;27014:18;;27001:32;27042:31;27001:32;27042:31;:::i;:::-;26464:639;;;;-1:-1:-1;26464:639:40;;-1:-1:-1;;26464:639:40:o;27108:907::-;27557:3;27546:9;27539:22;27520:4;27584:57;27636:3;27625:9;27621:19;27613:6;27584:57;:::i;:::-;27689:9;27681:6;27677:22;27672:2;27661:9;27657:18;27650:50;27723:43;27759:6;27751;27723:43;:::i;:::-;27709:57;;27814:9;27806:6;27802:22;27797:2;27786:9;27782:18;27775:50;27848:43;27884:6;27876;27848:43;:::i;:::-;27834:57;;27939:9;27931:6;27927:22;27922:2;27911:9;27907:18;27900:50;27967:42;28002:6;27994;27967:42;:::i;:::-;27959:50;27108:907;-1:-1:-1;;;;;;;27108:907:40:o;28020:380::-;28099:1;28095:12;;;;28142;;;28163:61;;28217:4;28209:6;28205:17;28195:27;;28163:61;28270:2;28262:6;28259:14;28239:18;28236:38;28233:161;;28316:10;28311:3;28307:20;28304:1;28297:31;28351:4;28348:1;28341:15;28379:4;28376:1;28369:15;28233:161;;28020:380;;;:::o;28537:127::-;28598:10;28593:3;28589:20;28586:1;28579:31;28629:4;28626:1;28619:15;28653:4;28650:1;28643:15;28669:127;28730:10;28725:3;28721:20;28718:1;28711:31;28761:4;28758:1;28751:15;28785:4;28782:1;28775:15;28801:125;28866:9;;;28887:10;;;28884:36;;;28900:18;;:::i;28931:251::-;29001:6;29054:2;29042:9;29033:7;29029:23;29025:32;29022:52;;;29070:1;29067;29060:12;29022:52;29102:9;29096:16;29121:31;29146:5;29121:31;:::i;29187:168::-;29260:9;;;29291;;29308:15;;;29302:22;;29288:37;29278:71;;29329:18;;:::i;29766:266::-;29854:6;29849:3;29842:19;29906:6;29899:5;29892:4;29887:3;29883:14;29870:43;-1:-1:-1;29958:1:40;29933:16;;;29951:4;29929:27;;;29922:38;;;;30014:2;29993:15;;;-1:-1:-1;;29989:29:40;29980:39;;;29976:50;;29766:266::o;30037:1331::-;30409:3;30422:22;;;30394:19;;30479:22;;;30361:4;30559:6;30532:3;30517:19;;30361:4;30593:304;30607:6;30604:1;30601:13;30593:304;;;30682:6;30669:20;30702:31;30727:5;30702:31;:::i;:::-;-1:-1:-1;;;;;30758:31:40;30746:44;;30813:4;30872:15;;;;30837:12;;;;30786:1;30622:9;30593:304;;;-1:-1:-1;30935:19:40;;;30928:4;30913:20;;30906:49;30964:19;;;-1:-1:-1;;;;;30995:31:40;;30992:51;;;31039:1;31036;31029:12;30992:51;31073:6;31070:1;31066:14;31052:28;;31126:6;31118;31111:4;31106:3;31102:14;31089:44;-1:-1:-1;;;;;5783:31:40;;31219:2;31204:18;;5771:44;31152:16;31283:4;31271:9;31267:2;31263:18;31259:29;31254:2;31243:9;31239:18;31232:57;31306:56;31356:4;31352:2;31348:13;31340:6;31332;31306:56;:::i;:::-;31298:64;30037:1331;-1:-1:-1;;;;;;;;;;30037:1331:40:o",
    "linkReferences": {},
    "immutableReferences": {
      "1644": [
        {
          "start": 2200,
          "length": 32
        },
        {
          "start": 5971,
          "length": 32
        }
      ],
      "1647": [
        {
          "start": 2121,
          "length": 32
        },
        {
          "start": 6159,
          "length": 32
        }
      ],
      "1650": [
        {
          "start": 1361,
          "length": 32
        },
        {
          "start": 6010,
          "length": 32
        }
      ],
      "1653": [
        {
          "start": 1869,
          "length": 32
        },
        {
          "start": 6059,
          "length": 32
        }
      ],
      "1656": [
        {
          "start": 1496,
          "length": 32
        },
        {
          "start": 6099,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "accFeeIndex()": "7007d7da",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batchLiquidations(uint256[])": "8015d925",
    "borrowLiquidity(uint256,uint256)": "28cad17f",
    "borrowRate()": "c914b437",
    "cfmm()": "3035aa9c",
    "createLoan()": "65ec1a45",
    "decimals()": "313ce567",
    "decimals_(uint256)": "fcc8bd78",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "decreaseCollateral(uint256,uint256[],address)": "ea940b1d",
    "depositNoPull(address)": "65418ef5",
    "depositReserves(address,uint256[],uint256[],bytes)": "54fe2a96",
    "factory()": "c45a0155",
    "getCFMMBalances()": "c80994bb",
    "getConstantPoolData()": "97509c4e",
    "getLastCFMMPrice()": "74aa5fad",
    "getLatestCFMMBalances()": "cd189187",
    "getLatestCFMMReserves()": "6f56f4d3",
    "getLatestPoolData()": "c70c07f7",
    "getLatestRates()": "871a78d2",
    "getLoanCount()": "52196812",
    "getLoans(uint256,uint256)": "86b20104",
    "getPoolBalances()": "52375bb1",
    "getPoolData()": "fb29238b",
    "getRates()": "9accab55",
    "getRebalanceDeltas(uint256)": "7a651372",
    "getTokensMetaData()": "f344670d",
    "increaseAllowance(address,uint256)": "39509351",
    "increaseCollateral(uint256)": "b8a83834",
    "initialize(address,address[],uint8[],bytes)": "40894f17",
    "lastPrice()": "053f14da",
    "liquidate(uint256,int256[],uint256[])": "6854f77b",
    "liquidateWithLP(uint256)": "eff98e24",
    "liquidationStrategy()": "5b311212",
    "loan(uint256)": "365a5306",
    "longStrategy()": "4932ed37",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "protocolId()": "da1f12ab",
    "rebalanceCollateral(uint256,int256[])": "2a9bc3f6",
    "repayLiquidity(uint256,uint256,uint256[])": "a964e52c",
    "setLatestRates(uint256,uint256,uint256,uint256)": "16d967ed",
    "shortStrategy()": "89c4fa12",
    "skim(address)": "bc25cf77",
    "symbol()": "95d89b41",
    "sync()": "fff6cae9",
    "testSendTokensCallback(address,address[],uint256[],address,bytes)": "df3489e0",
    "tester()": "8308abd4",
    "tokens()": "9d63848a",
    "tokens_(uint256)": "f9b5533e",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "updatePool(uint256)": "51eb05a6",
    "utilRate()": "3fb945db",
    "validateCFMM(address[],address,bytes)": "ba03915b",
    "withdrawNoPull(address)": "192fdf10",
    "withdrawReserves(address)": "0cfba8eb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_protocolId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_longStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_shortStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidationStrategy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128[]\",\"name\":\"amounts\",\"type\":\"uint128[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":true,\"internalType\":\"enum IStrategyEvents.TX_TYPE\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"ExternalSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"collateral\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"writeDownAmt\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"enum IStrategyEvents.TX_TYPE\",\"name\":\"txType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"Liquidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"LoanCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128[]\",\"name\":\"tokensHeld\",\"type\":\"uint128[]\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"initLiquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"rateIndex\",\"type\":\"uint96\"},{\"indexed\":true,\"internalType\":\"enum IStrategyEvents.TX_TYPE\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"LoanUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokenBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokenBorrowed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"lastBlockNumber\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"accFeeIndex\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokenBorrowedPlusInterest\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"lpInvariant\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"borrowedInvariant\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128[]\",\"name\":\"cfmmReserves\",\"type\":\"uint128[]\"},{\"indexed\":true,\"internalType\":\"enum IStrategyEvents.TX_TYPE\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"PoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accFeeIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"name\":\"batchLiquidations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalLoanLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"refund\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"borrowLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cfmm\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"decimals_\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"decreaseCollateral\",\"outputs\":[{\"internalType\":\"uint128[]\",\"name\":\"tokensHeld\",\"type\":\"uint128[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositNoPull\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"depositReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"reserves\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCFMMBalances\",\"outputs\":[{\"internalType\":\"uint128[]\",\"name\":\"cfmmReserves\",\"type\":\"uint128[]\"},{\"internalType\":\"uint256\",\"name\":\"cfmmInvariant\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cfmmTotalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConstantPoolData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"poolId\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"protocolId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"longStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shortStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidationStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"LP_TOKEN_BALANCE\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"LP_TOKEN_BORROWED\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"LP_TOKEN_BORROWED_PLUS_INTEREST\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"BORROWED_INVARIANT\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"LP_INVARIANT\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"cfmm\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"accFeeIndex\",\"type\":\"uint96\"},{\"internalType\":\"uint48\",\"name\":\"LAST_BLOCK_NUMBER\",\"type\":\"uint48\"},{\"internalType\":\"uint80\",\"name\":\"lastCFMMFeeIndex\",\"type\":\"uint80\"},{\"internalType\":\"uint128\",\"name\":\"lastCFMMInvariant\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"lastCFMMTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"uint8[]\",\"name\":\"decimals\",\"type\":\"uint8[]\"},{\"internalType\":\"uint128[]\",\"name\":\"TOKEN_BALANCE\",\"type\":\"uint128[]\"},{\"internalType\":\"uint128[]\",\"name\":\"CFMM_RESERVES\",\"type\":\"uint128[]\"},{\"internalType\":\"uint256\",\"name\":\"lastPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastFeeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationRate\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"currBlockNumber\",\"type\":\"uint48\"}],\"internalType\":\"struct IGammaPool.PoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastCFMMPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestCFMMBalances\",\"outputs\":[{\"internalType\":\"uint128[]\",\"name\":\"cfmmReserves\",\"type\":\"uint128[]\"},{\"internalType\":\"uint256\",\"name\":\"cfmmInvariant\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cfmmTotalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestCFMMReserves\",\"outputs\":[{\"internalType\":\"uint128[]\",\"name\":\"cfmmReserves\",\"type\":\"uint128[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPoolData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"poolId\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"protocolId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"longStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shortStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidationStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"LP_TOKEN_BALANCE\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"LP_TOKEN_BORROWED\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"LP_TOKEN_BORROWED_PLUS_INTEREST\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"BORROWED_INVARIANT\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"LP_INVARIANT\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"cfmm\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"accFeeIndex\",\"type\":\"uint96\"},{\"internalType\":\"uint48\",\"name\":\"LAST_BLOCK_NUMBER\",\"type\":\"uint48\"},{\"internalType\":\"uint80\",\"name\":\"lastCFMMFeeIndex\",\"type\":\"uint80\"},{\"internalType\":\"uint128\",\"name\":\"lastCFMMInvariant\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"lastCFMMTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"uint8[]\",\"name\":\"decimals\",\"type\":\"uint8[]\"},{\"internalType\":\"uint128[]\",\"name\":\"TOKEN_BALANCE\",\"type\":\"uint128[]\"},{\"internalType\":\"uint128[]\",\"name\":\"CFMM_RESERVES\",\"type\":\"uint128[]\"},{\"internalType\":\"uint256\",\"name\":\"lastPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastFeeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationRate\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"currBlockNumber\",\"type\":\"uint48\"}],\"internalType\":\"struct IGammaPool.PoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestRates\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"accFeeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastCFMMFeeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastFeeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBlockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currBlockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IGammaPool.RateData\",\"name\":\"data\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLoanCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getLoans\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolId\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"rateIndex\",\"type\":\"uint96\"},{\"internalType\":\"uint128\",\"name\":\"initLiquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"lpTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint128[]\",\"name\":\"tokensHeld\",\"type\":\"uint128[]\"},{\"internalType\":\"uint256\",\"name\":\"px\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"decimals\",\"type\":\"uint8[]\"},{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"}],\"internalType\":\"struct IGammaPool.LoanData[]\",\"name\":\"_loans\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolBalances\",\"outputs\":[{\"internalType\":\"uint128[]\",\"name\":\"tokenBalances\",\"type\":\"uint128[]\"},{\"internalType\":\"uint256\",\"name\":\"lpTokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpTokenBorrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpTokenBorrowedPlusInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedInvariant\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpInvariant\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"poolId\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"protocolId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"longStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shortStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidationStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"LP_TOKEN_BALANCE\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"LP_TOKEN_BORROWED\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"LP_TOKEN_BORROWED_PLUS_INTEREST\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"BORROWED_INVARIANT\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"LP_INVARIANT\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"cfmm\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"accFeeIndex\",\"type\":\"uint96\"},{\"internalType\":\"uint48\",\"name\":\"LAST_BLOCK_NUMBER\",\"type\":\"uint48\"},{\"internalType\":\"uint80\",\"name\":\"lastCFMMFeeIndex\",\"type\":\"uint80\"},{\"internalType\":\"uint128\",\"name\":\"lastCFMMInvariant\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"lastCFMMTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"uint8[]\",\"name\":\"decimals\",\"type\":\"uint8[]\"},{\"internalType\":\"uint128[]\",\"name\":\"TOKEN_BALANCE\",\"type\":\"uint128[]\"},{\"internalType\":\"uint128[]\",\"name\":\"CFMM_RESERVES\",\"type\":\"uint128[]\"},{\"internalType\":\"uint256\",\"name\":\"lastPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastFeeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationRate\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"currBlockNumber\",\"type\":\"uint48\"}],\"internalType\":\"struct IGammaPool.PoolData\",\"name\":\"data\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"accFeeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastCFMMFeeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBlockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getRebalanceDeltas\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokensMetaData\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"_symbols\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_names\",\"type\":\"string[]\"},{\"internalType\":\"uint8[]\",\"name\":\"_decimals\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"increaseCollateral\",\"outputs\":[{\"internalType\":\"uint128[]\",\"name\":\"tokensHeld\",\"type\":\"uint128[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cfmm\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"_decimals\",\"type\":\"uint8[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"name\":\"liquidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"refund\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"liquidateWithLP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"refund\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loan\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolId\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"rateIndex\",\"type\":\"uint96\"},{\"internalType\":\"uint128\",\"name\":\"initLiquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"lpTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint128[]\",\"name\":\"tokensHeld\",\"type\":\"uint128[]\"},{\"internalType\":\"uint256\",\"name\":\"px\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"decimals\",\"type\":\"uint8[]\"},{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"}],\"internalType\":\"struct IGammaPool.LoanData\",\"name\":\"_loanData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"longStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"name\":\"rebalanceCollateral\",\"outputs\":[{\"internalType\":\"uint128[]\",\"name\":\"tokensHeld\",\"type\":\"uint128[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"fees\",\"type\":\"uint256[]\"}],\"name\":\"repayLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_utilRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_accFeeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lastPrice\",\"type\":\"uint256\"}],\"name\":\"setLatestRates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shortStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"posAddr\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"testSendTokensCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tester\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"validateCFMM\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawNoPull\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"reserves\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"createLoan()\":{\"details\":\"Create a new Loan struct\",\"returns\":{\"tokenId\":\"- unique id of loan struct created\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getCFMMBalances()\":{\"details\":\"Balances in CFMM at last update of GammaPool\",\"returns\":{\"cfmmInvariant\":\"- total liquidity invariant of CFMM last time GammaPool was updated\",\"cfmmReserves\":\"- total reserve tokens in CFMM last time GammaPool was updated\",\"cfmmTotalSupply\":\"- total CFMM LP tokens in existence last time GammaPool was updated\"}},\"getConstantPoolData()\":{\"returns\":{\"data\":\"- struct containing all relevant global state variables that are not updated from time passage or accrued trading fees\"}},\"getLastCFMMPrice()\":{\"returns\":{\"_0\":\"lastPrice - calculates and gets current price at CFMM\"}},\"getLatestCFMMBalances()\":{\"returns\":{\"cfmmInvariant\":\"- latest total invariant in the CFMM\",\"cfmmReserves\":\"- latest token reserves in the CFMM\",\"cfmmTotalSupply\":\"- latest total supply of LP tokens in CFMM\"}},\"getLatestCFMMReserves()\":{\"returns\":{\"cfmmReserves\":\"- latest token reserves in the CFMM\"}},\"getLatestPoolData()\":{\"details\":\"Returns additional nonzero fields (e.g. lastPrice, borrowRate, etc.)\",\"returns\":{\"data\":\"- struct containing all relevant global state variables and descriptive information of GammaPool. Used to avoid making multiple calls\"}},\"getLatestRates()\":{\"details\":\"Get latest rate information from GammaPool\",\"returns\":{\"data\":\"- RateData struct containing latest rate information\"}},\"getLoanCount()\":{\"returns\":{\"_0\":\"loanCount - total number of loans opened\"}},\"getPoolBalances()\":{\"details\":\"Balances in the GammaPool of collateral tokens, CFMM LP tokens, and invariant amounts at last update\",\"returns\":{\"borrowedInvariant\":\"- invariant amount borrowed from GammaPool including accrued interest, maps to lpTokenBorrowedPlusInterest\",\"lpInvariant\":\"- invariant of CFMM LP tokens in GammaPool not borrowed, maps to lpTokenBalance\",\"lpTokenBalance\":\"- CFMM LP token balance of GammaPool\",\"lpTokenBorrowed\":\"- CFMM LP token principal amounts borrowed from GammaPool\",\"lpTokenBorrowedPlusInterest\":\"- CFMM LP token amounts borrowed from GammaPool including accrued interest\",\"tokenBalances\":\"- balances of collateral tokens in GammaPool\"}},\"getPoolData()\":{\"returns\":{\"data\":\"- struct containing all relevant global state variables and descriptive information of GammaPool. Used to avoid making multiple calls\"}},\"getRates()\":{\"details\":\"Interest rate information in GammaPool at last update\",\"returns\":{\"accFeeIndex\":\"- total accrued interest in GammaPool at last update\",\"lastBlockNumber\":\"- last block GammaPool was updated\",\"lastCFMMFeeIndex\":\"- total accrued CFMM fee since last update\"}},\"getRebalanceDeltas(uint256)\":{\"details\":\"Get rebalancing quantity to be able to fully close loan\",\"params\":{\"tokenId\":\"- unique id identifying loan\"},\"returns\":{\"deltas\":\"- collateral amounts being bought or sold (>0 buy, <0 sell), index matches tokensHeld[] index. Only n-1 tokens can be traded\"}},\"getTokensMetaData()\":{\"details\":\"Get CFMM tokens meta data\",\"returns\":{\"_decimals\":\"- array of decimals of ERC20 tokens of CFMM\",\"_names\":\"- array of names of ERC20 tokens of CFMM\",\"_symbols\":\"- array of symbols of ERC20 tokens of CFMM\",\"_tokens\":\"- array of token address of ERC20 tokens of CFMM\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"sync()\":{\"details\":\"Synchronize LP_TOKEN_BALANCE with actual CFMM LP tokens deposited in GammaPool\"},\"tokens()\":{\"details\":\"ERC20 tokens of CFMM\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"updatePool(uint256)\":{\"details\":\"Update pool liquidity debt and optinally also loan liquidity debt\",\"params\":{\"tokenId\":\"- (optional) unique ids identifying loan, pass zero to ignore this parameter\"},\"returns\":{\"_0\":\"- updated liquidity debt amount of loan\",\"_1\":\"- updated liquidity debt amount of pool\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getLatestPoolData()\":{\"notice\":\"Difference with getPoolData() is this struct is what PoolData would return if an update of the GammaPool were to occur at the current block\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestGammaPool2.sol\":\"TestGammaPool2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@gammaswap/=node_modules/@gammaswap/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/test/ITestERC20.sol\":{\"keccak256\":\"0x7c1cb96ddb6b7e3fd88a0492e702a50ef1ae7f081ace0e70e978c1c9e6a8bcd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc863bbca8dcfc56462ab1118b65b79dca09a740bd2eb2d880de2fefaea49b48\",\"dweb:/ipfs/QmR1zpztwqbA84CjkyJCZUkZviX3aXNErYEwjdfZDtAh9j\"]},\"contracts/test/ITestERC20Metadata.sol\":{\"keccak256\":\"0xf5f616be94ed3bdf90a30ac1d07f1fc3c57af50e89b508551edc4bda5d08e4d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bd0b28b30516bcdc825c1c6cdc4fb4c93f55f5f1aea616fa3a2d5105ed4505\",\"dweb:/ipfs/QmeaETNvQuRSqAeY3C4uzZmT7XZeuRKScrqy8Gadw7JLx7\"]},\"contracts/test/ITestGammaPoolFactory.sol\":{\"keccak256\":\"0x7411ba0258d6503619e3d5ebf1e1c8524364f7ad336379b2f74fd99520fc96bd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://df28b1ab117ae1a12dfa5bc0a353b872f42f50e747a669a2da89a7a56151cec5\",\"dweb:/ipfs/Qmf3DWy25VAVEK2FVHWhKFcA6PL14zrgFJ6scDLkmVBYGm\"]},\"contracts/test/TERC20.sol\":{\"keccak256\":\"0x6325dfb2a2a6e7bab6ce656f582be387a9c554e0bdff3a4d8877cd29cc86e7ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656fe26ec8e5d485965d7ab07e91e801dcfaf8ae9aff7e3de64c0b925d602e17\",\"dweb:/ipfs/QmYJZxu86K3D67sscx5kFeLJwV913Yc6MfpGNzt5JW4151\"]},\"contracts/test/TestGammaPool.sol\":{\"keccak256\":\"0xd9c54fab8ebf83d2236b74d6b46ef935190f67ca9404d2ff636e7645f2e47ea1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c884ca37864cff47d39ddf7ac378c58809671d84df5948a98dff0a9a591405ca\",\"dweb:/ipfs/QmXgsB8a4HGr22paUSrqgPXyXcvLjBoDkKppZQSGQizHSN\"]},\"contracts/test/TestGammaPool2.sol\":{\"keccak256\":\"0x3ecdf9cb3ed37f57bd546caa797b8906d68f313bc4e008ef246f227a25581163\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bc11df95d21d41213b9c8e7388c5f3e15152c7548bfb2f3edc2d2aebaa87ca5f\",\"dweb:/ipfs/QmanMpLcw9eEiMjGr25ugr14sN1g2a1i99ZwBQLLdxtyTY\"]},\"node_modules/@gammaswap/v1-core/contracts/interfaces/IGammaPool.sol\":{\"keccak256\":\"0xcdb8a1d9a41221b7f0c339065451b1978560c93c202be25a97af8c00ba2d55ef\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://01663f10d4d767c9b098bb1ba5440f89b30f3e041b9a1dfd20658b43f4703f87\",\"dweb:/ipfs/QmRkLu869pW3pDQmGcc8DnekfQTyYojnHrbAT7ePKQoACx\"]},\"node_modules/@gammaswap/v1-core/contracts/interfaces/IGammaPoolEvents.sol\":{\"keccak256\":\"0xf2ea9ca71d445ec5f8fe5d1ee1f28761b60c8f786902aff34e7438e102bfed79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://aa9cd3e2341355caf94d90d2a21f6aae15259c7345ade628c3977e310d7fd8b1\",\"dweb:/ipfs/QmQAXKruMhZqjfBaG1T6a8Do7DmNHggSxZWdacfXyQ879E\"]},\"node_modules/@gammaswap/v1-core/contracts/interfaces/IGammaPoolFactory.sol\":{\"keccak256\":\"0xb8169429532ad037f8ab27c221d98132bdc5f815eebb16392bb51a3045b262ee\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bf2ac76dc37238eea4d26f793da4b135e1803e46e8b14f16e8062271954dab35\",\"dweb:/ipfs/QmVseSs8jTetSTH7hxGA4E4LMqPdJNEu12d268oobGyM7M\"]},\"node_modules/@gammaswap/v1-core/contracts/interfaces/periphery/ISendTokensCallback.sol\":{\"keccak256\":\"0xa32cbd95925e95f0d2c5deca7f576313def8e1775ca5b8e3e98ef2a4b54154ba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5f9446e78e834a914839ddf629174df60dc8996ff5d16c5a3b5cf7d62dc9fb35\",\"dweb:/ipfs/QmYjaWxnywfUceNLT27sDAGaqABYfD6q5kRnXaVNcizMed\"]},\"node_modules/@gammaswap/v1-core/contracts/interfaces/strategies/events/IExternalStrategyEvents.sol\":{\"keccak256\":\"0x832450347032f3d6178045bcf754ea30b6a74eeb6a786fd23214582780619158\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1afbe6eab83fb06e3353ed9d22b70874efeb5787f51c60785569d86d98cf9399\",\"dweb:/ipfs/QmeQPwe75onniP9dCjifJuzd4d8BuM7iK2EuMEWcYDws88\"]},\"node_modules/@gammaswap/v1-core/contracts/interfaces/strategies/events/IGammaPoolERC20Events.sol\":{\"keccak256\":\"0x9f71a686b572cb99dcf28c87fdbeaf513ec37b0b2a1eea7a442bbfef7e96c466\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ebef3809901f949160b180bbb7206832b4771fa3028c18f76eb6db0c5c6343bc\",\"dweb:/ipfs/QmRxxzNAuH8JhCjRTX2UtdmRd2DkKUMqxmm8Vga85cRQRL\"]},\"node_modules/@gammaswap/v1-core/contracts/interfaces/strategies/events/ILiquidationStrategyEvents.sol\":{\"keccak256\":\"0x1f009597009c68e642dd0342849a5152d26207156c7b8cdcc3fd0721ddfc0e20\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f00d623be5df1a0817dd32e17f7a3c078dbd417911971c585e68c1537af6abe6\",\"dweb:/ipfs/QmeWeu9C96csmBNa6tSJtx4MZosHhCVuDQFoGpYik9Ynv2\"]},\"node_modules/@gammaswap/v1-core/contracts/interfaces/strategies/events/ILongStrategyEvents.sol\":{\"keccak256\":\"0x42ecb77c95b87dd95d059c88ac704c57ff3cebbf6aec2b80208e7c817ff27324\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bd1cad8352d8e55270f26bc4e38ee16d15de9d8c77331ba7ef8afbf7f39ffc41\",\"dweb:/ipfs/QmeGum8jB8WzsqhV5eNErifCSjPt8hRS3P73MKxuRDevyP\"]},\"node_modules/@gammaswap/v1-core/contracts/interfaces/strategies/events/IShortStrategyEvents.sol\":{\"keccak256\":\"0xb8364a03d6510ce6cc06e80d07e1b95eb830846531b538fd89d596341ea7e9b0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ec99cfc1ce267318d1b1af8abd703022be278a1dfac467f15369b832b07467b2\",\"dweb:/ipfs/QmWgWfcHtLaV51at58G4UZL25FAGMbAYUKbPXAB7GYg5i7\"]},\"node_modules/@gammaswap/v1-core/contracts/interfaces/strategies/events/IStrategyEvents.sol\":{\"keccak256\":\"0x064b90ebb2a719301c74417bff732323e9af13c79a46675917a6d9afaff79a70\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e0f2657b940b14fd82707f9f84eb6ad2a90d7296d14e18d8da3540c9bfa9a804\",\"dweb:/ipfs/QmSPRT9CcKf9b6BhuZBaTHjfWyNCJ4C4ZsTJQxPcEzh8r9\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_protocolId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "_factory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_longStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_shortStrategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_liquidationStrategy",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint128[]",
              "name": "amounts",
              "type": "uint128[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lpTokens",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "enum IStrategyEvents.TX_TYPE",
              "name": "txType",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ExternalSwap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint128",
              "name": "collateral",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "writeDownAmt",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "enum IStrategyEvents.TX_TYPE",
              "name": "txType",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Liquidation",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LoanCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint128[]",
              "name": "tokensHeld",
              "type": "uint128[]",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "initLiquidity",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lpTokens",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint96",
              "name": "rateIndex",
              "type": "uint96",
              "indexed": false
            },
            {
              "internalType": "enum IStrategyEvents.TX_TYPE",
              "name": "txType",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LoanUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lpTokenBalance",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lpTokenBorrowed",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint48",
              "name": "lastBlockNumber",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "uint96",
              "name": "accFeeIndex",
              "type": "uint96",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lpTokenBorrowedPlusInterest",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "lpInvariant",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "borrowedInvariant",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128[]",
              "name": "cfmmReserves",
              "type": "uint128[]",
              "indexed": false
            },
            {
              "internalType": "enum IStrategyEvents.TX_TYPE",
              "name": "txType",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PoolUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "accFeeIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchLiquidations",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalLoanLiquidity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "refund",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrowLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liquidityBorrowed",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "borrowRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cfmm",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createLoan",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals_",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseCollateral",
          "outputs": [
            {
              "internalType": "uint128[]",
              "name": "tokensHeld",
              "type": "uint128[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositNoPull",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositReserves",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "reserves",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCFMMBalances",
          "outputs": [
            {
              "internalType": "uint128[]",
              "name": "cfmmReserves",
              "type": "uint128[]"
            },
            {
              "internalType": "uint256",
              "name": "cfmmInvariant",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cfmmTotalSupply",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getConstantPoolData",
          "outputs": [
            {
              "internalType": "struct IGammaPool.PoolData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "poolId",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "protocolId",
                  "type": "uint16"
                },
                {
                  "internalType": "address",
                  "name": "longStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "shortStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "liquidationStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "factory",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "LP_TOKEN_BALANCE",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "LP_TOKEN_BORROWED",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "LP_TOKEN_BORROWED_PLUS_INTEREST",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "BORROWED_INVARIANT",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "LP_INVARIANT",
                  "type": "uint128"
                },
                {
                  "internalType": "address",
                  "name": "cfmm",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "accFeeIndex",
                  "type": "uint96"
                },
                {
                  "internalType": "uint48",
                  "name": "LAST_BLOCK_NUMBER",
                  "type": "uint48"
                },
                {
                  "internalType": "uint80",
                  "name": "lastCFMMFeeIndex",
                  "type": "uint80"
                },
                {
                  "internalType": "uint128",
                  "name": "lastCFMMInvariant",
                  "type": "uint128"
                },
                {
                  "internalType": "uint256",
                  "name": "lastCFMMTotalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "string[]",
                  "name": "symbols",
                  "type": "string[]"
                },
                {
                  "internalType": "string[]",
                  "name": "names",
                  "type": "string[]"
                },
                {
                  "internalType": "uint8[]",
                  "name": "decimals",
                  "type": "uint8[]"
                },
                {
                  "internalType": "uint128[]",
                  "name": "TOKEN_BALANCE",
                  "type": "uint128[]"
                },
                {
                  "internalType": "uint128[]",
                  "name": "CFMM_RESERVES",
                  "type": "uint128[]"
                },
                {
                  "internalType": "uint256",
                  "name": "lastPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastFeeIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "utilizationRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint48",
                  "name": "currBlockNumber",
                  "type": "uint48"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLastCFMMPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestCFMMBalances",
          "outputs": [
            {
              "internalType": "uint128[]",
              "name": "cfmmReserves",
              "type": "uint128[]"
            },
            {
              "internalType": "uint256",
              "name": "cfmmInvariant",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cfmmTotalSupply",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestCFMMReserves",
          "outputs": [
            {
              "internalType": "uint128[]",
              "name": "cfmmReserves",
              "type": "uint128[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestPoolData",
          "outputs": [
            {
              "internalType": "struct IGammaPool.PoolData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "poolId",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "protocolId",
                  "type": "uint16"
                },
                {
                  "internalType": "address",
                  "name": "longStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "shortStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "liquidationStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "factory",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "LP_TOKEN_BALANCE",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "LP_TOKEN_BORROWED",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "LP_TOKEN_BORROWED_PLUS_INTEREST",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "BORROWED_INVARIANT",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "LP_INVARIANT",
                  "type": "uint128"
                },
                {
                  "internalType": "address",
                  "name": "cfmm",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "accFeeIndex",
                  "type": "uint96"
                },
                {
                  "internalType": "uint48",
                  "name": "LAST_BLOCK_NUMBER",
                  "type": "uint48"
                },
                {
                  "internalType": "uint80",
                  "name": "lastCFMMFeeIndex",
                  "type": "uint80"
                },
                {
                  "internalType": "uint128",
                  "name": "lastCFMMInvariant",
                  "type": "uint128"
                },
                {
                  "internalType": "uint256",
                  "name": "lastCFMMTotalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "string[]",
                  "name": "symbols",
                  "type": "string[]"
                },
                {
                  "internalType": "string[]",
                  "name": "names",
                  "type": "string[]"
                },
                {
                  "internalType": "uint8[]",
                  "name": "decimals",
                  "type": "uint8[]"
                },
                {
                  "internalType": "uint128[]",
                  "name": "TOKEN_BALANCE",
                  "type": "uint128[]"
                },
                {
                  "internalType": "uint128[]",
                  "name": "CFMM_RESERVES",
                  "type": "uint128[]"
                },
                {
                  "internalType": "uint256",
                  "name": "lastPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastFeeIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "utilizationRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint48",
                  "name": "currBlockNumber",
                  "type": "uint48"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestRates",
          "outputs": [
            {
              "internalType": "struct IGammaPool.RateData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "accFeeIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastCFMMFeeIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastFeeIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "utilizationRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastBlockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currBlockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastPrice",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoans",
          "outputs": [
            {
              "internalType": "struct IGammaPool.LoanData[]",
              "name": "_loans",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "poolId",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "rateIndex",
                  "type": "uint96"
                },
                {
                  "internalType": "uint128",
                  "name": "initLiquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint256",
                  "name": "lpTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128[]",
                  "name": "tokensHeld",
                  "type": "uint128[]"
                },
                {
                  "internalType": "uint256",
                  "name": "px",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint8[]",
                  "name": "decimals",
                  "type": "uint8[]"
                },
                {
                  "internalType": "string[]",
                  "name": "symbols",
                  "type": "string[]"
                },
                {
                  "internalType": "string[]",
                  "name": "names",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolBalances",
          "outputs": [
            {
              "internalType": "uint128[]",
              "name": "tokenBalances",
              "type": "uint128[]"
            },
            {
              "internalType": "uint256",
              "name": "lpTokenBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lpTokenBorrowed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lpTokenBorrowedPlusInterest",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowedInvariant",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lpInvariant",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolData",
          "outputs": [
            {
              "internalType": "struct IGammaPool.PoolData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "poolId",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "protocolId",
                  "type": "uint16"
                },
                {
                  "internalType": "address",
                  "name": "longStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "shortStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "liquidationStrategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "factory",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "LP_TOKEN_BALANCE",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "LP_TOKEN_BORROWED",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "LP_TOKEN_BORROWED_PLUS_INTEREST",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "BORROWED_INVARIANT",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "LP_INVARIANT",
                  "type": "uint128"
                },
                {
                  "internalType": "address",
                  "name": "cfmm",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "accFeeIndex",
                  "type": "uint96"
                },
                {
                  "internalType": "uint48",
                  "name": "LAST_BLOCK_NUMBER",
                  "type": "uint48"
                },
                {
                  "internalType": "uint80",
                  "name": "lastCFMMFeeIndex",
                  "type": "uint80"
                },
                {
                  "internalType": "uint128",
                  "name": "lastCFMMInvariant",
                  "type": "uint128"
                },
                {
                  "internalType": "uint256",
                  "name": "lastCFMMTotalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "string[]",
                  "name": "symbols",
                  "type": "string[]"
                },
                {
                  "internalType": "string[]",
                  "name": "names",
                  "type": "string[]"
                },
                {
                  "internalType": "uint8[]",
                  "name": "decimals",
                  "type": "uint8[]"
                },
                {
                  "internalType": "uint128[]",
                  "name": "TOKEN_BALANCE",
                  "type": "uint128[]"
                },
                {
                  "internalType": "uint128[]",
                  "name": "CFMM_RESERVES",
                  "type": "uint128[]"
                },
                {
                  "internalType": "uint256",
                  "name": "lastPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastFeeIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "utilizationRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint48",
                  "name": "currBlockNumber",
                  "type": "uint48"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRates",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "accFeeIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastCFMMFeeIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastBlockNumber",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRebalanceDeltas",
          "outputs": [
            {
              "internalType": "int256[]",
              "name": "deltas",
              "type": "int256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokensMetaData",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "_tokens",
              "type": "address[]"
            },
            {
              "internalType": "string[]",
              "name": "_symbols",
              "type": "string[]"
            },
            {
              "internalType": "string[]",
              "name": "_names",
              "type": "string[]"
            },
            {
              "internalType": "uint8[]",
              "name": "_decimals",
              "type": "uint8[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseCollateral",
          "outputs": [
            {
              "internalType": "uint128[]",
              "name": "tokensHeld",
              "type": "uint128[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_cfmm",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "_tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint8[]",
              "name": "_decimals",
              "type": "uint8[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "int256[]",
              "name": "",
              "type": "int256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "loanLiquidity",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "refund",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidateWithLP",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "loanLiquidity",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "refund",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidationStrategy",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "loan",
          "outputs": [
            {
              "internalType": "struct IGammaPool.LoanData",
              "name": "_loanData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "poolId",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "rateIndex",
                  "type": "uint96"
                },
                {
                  "internalType": "uint128",
                  "name": "initLiquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint256",
                  "name": "lpTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128[]",
                  "name": "tokensHeld",
                  "type": "uint128[]"
                },
                {
                  "internalType": "uint256",
                  "name": "px",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint8[]",
                  "name": "decimals",
                  "type": "uint8[]"
                },
                {
                  "internalType": "string[]",
                  "name": "symbols",
                  "type": "string[]"
                },
                {
                  "internalType": "string[]",
                  "name": "names",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "longStrategy",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolId",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "int256[]",
              "name": "",
              "type": "int256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rebalanceCollateral",
          "outputs": [
            {
              "internalType": "uint128[]",
              "name": "tokensHeld",
              "type": "uint128[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "fees",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repayLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liquidityPaid",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_utilRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_borrowRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_accFeeIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_lastPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLatestRates"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "shortStrategy",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "skim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sync"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "posAddr",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "_tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "payee",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSendTokensCallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tester",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokens",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokens_",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updatePool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "utilRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "validateCFMM",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawNoPull",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawReserves",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "reserves",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "createLoan()": {
            "details": "Create a new Loan struct",
            "returns": {
              "tokenId": "- unique id of loan struct created"
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "getCFMMBalances()": {
            "details": "Balances in CFMM at last update of GammaPool",
            "returns": {
              "cfmmInvariant": "- total liquidity invariant of CFMM last time GammaPool was updated",
              "cfmmReserves": "- total reserve tokens in CFMM last time GammaPool was updated",
              "cfmmTotalSupply": "- total CFMM LP tokens in existence last time GammaPool was updated"
            }
          },
          "getConstantPoolData()": {
            "returns": {
              "data": "- struct containing all relevant global state variables that are not updated from time passage or accrued trading fees"
            }
          },
          "getLastCFMMPrice()": {
            "returns": {
              "_0": "lastPrice - calculates and gets current price at CFMM"
            }
          },
          "getLatestCFMMBalances()": {
            "returns": {
              "cfmmInvariant": "- latest total invariant in the CFMM",
              "cfmmReserves": "- latest token reserves in the CFMM",
              "cfmmTotalSupply": "- latest total supply of LP tokens in CFMM"
            }
          },
          "getLatestCFMMReserves()": {
            "returns": {
              "cfmmReserves": "- latest token reserves in the CFMM"
            }
          },
          "getLatestPoolData()": {
            "details": "Returns additional nonzero fields (e.g. lastPrice, borrowRate, etc.)",
            "returns": {
              "data": "- struct containing all relevant global state variables and descriptive information of GammaPool. Used to avoid making multiple calls"
            }
          },
          "getLatestRates()": {
            "details": "Get latest rate information from GammaPool",
            "returns": {
              "data": "- RateData struct containing latest rate information"
            }
          },
          "getLoanCount()": {
            "returns": {
              "_0": "loanCount - total number of loans opened"
            }
          },
          "getPoolBalances()": {
            "details": "Balances in the GammaPool of collateral tokens, CFMM LP tokens, and invariant amounts at last update",
            "returns": {
              "borrowedInvariant": "- invariant amount borrowed from GammaPool including accrued interest, maps to lpTokenBorrowedPlusInterest",
              "lpInvariant": "- invariant of CFMM LP tokens in GammaPool not borrowed, maps to lpTokenBalance",
              "lpTokenBalance": "- CFMM LP token balance of GammaPool",
              "lpTokenBorrowed": "- CFMM LP token principal amounts borrowed from GammaPool",
              "lpTokenBorrowedPlusInterest": "- CFMM LP token amounts borrowed from GammaPool including accrued interest",
              "tokenBalances": "- balances of collateral tokens in GammaPool"
            }
          },
          "getPoolData()": {
            "returns": {
              "data": "- struct containing all relevant global state variables and descriptive information of GammaPool. Used to avoid making multiple calls"
            }
          },
          "getRates()": {
            "details": "Interest rate information in GammaPool at last update",
            "returns": {
              "accFeeIndex": "- total accrued interest in GammaPool at last update",
              "lastBlockNumber": "- last block GammaPool was updated",
              "lastCFMMFeeIndex": "- total accrued CFMM fee since last update"
            }
          },
          "getRebalanceDeltas(uint256)": {
            "details": "Get rebalancing quantity to be able to fully close loan",
            "params": {
              "tokenId": "- unique id identifying loan"
            },
            "returns": {
              "deltas": "- collateral amounts being bought or sold (>0 buy, <0 sell), index matches tokensHeld[] index. Only n-1 tokens can be traded"
            }
          },
          "getTokensMetaData()": {
            "details": "Get CFMM tokens meta data",
            "returns": {
              "_decimals": "- array of decimals of ERC20 tokens of CFMM",
              "_names": "- array of names of ERC20 tokens of CFMM",
              "_symbols": "- array of symbols of ERC20 tokens of CFMM",
              "_tokens": "- array of token address of ERC20 tokens of CFMM"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "sync()": {
            "details": "Synchronize LP_TOKEN_BALANCE with actual CFMM LP tokens deposited in GammaPool"
          },
          "tokens()": {
            "details": "ERC20 tokens of CFMM"
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "updatePool(uint256)": {
            "details": "Update pool liquidity debt and optinally also loan liquidity debt",
            "params": {
              "tokenId": "- (optional) unique ids identifying loan, pass zero to ignore this parameter"
            },
            "returns": {
              "_0": "- updated liquidity debt amount of loan",
              "_1": "- updated liquidity debt amount of pool"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getLatestPoolData()": {
            "notice": "Difference with getPoolData() is this struct is what PoolData would return if an update of the GammaPool were to occur at the current block"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@gammaswap/=node_modules/@gammaswap/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/test/TestGammaPool2.sol": "TestGammaPool2"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/test/ITestERC20.sol": {
        "keccak256": "0x7c1cb96ddb6b7e3fd88a0492e702a50ef1ae7f081ace0e70e978c1c9e6a8bcd6",
        "urls": [
          "bzz-raw://bc863bbca8dcfc56462ab1118b65b79dca09a740bd2eb2d880de2fefaea49b48",
          "dweb:/ipfs/QmR1zpztwqbA84CjkyJCZUkZviX3aXNErYEwjdfZDtAh9j"
        ],
        "license": "MIT"
      },
      "contracts/test/ITestERC20Metadata.sol": {
        "keccak256": "0xf5f616be94ed3bdf90a30ac1d07f1fc3c57af50e89b508551edc4bda5d08e4d8",
        "urls": [
          "bzz-raw://33bd0b28b30516bcdc825c1c6cdc4fb4c93f55f5f1aea616fa3a2d5105ed4505",
          "dweb:/ipfs/QmeaETNvQuRSqAeY3C4uzZmT7XZeuRKScrqy8Gadw7JLx7"
        ],
        "license": "MIT"
      },
      "contracts/test/ITestGammaPoolFactory.sol": {
        "keccak256": "0x7411ba0258d6503619e3d5ebf1e1c8524364f7ad336379b2f74fd99520fc96bd",
        "urls": [
          "bzz-raw://df28b1ab117ae1a12dfa5bc0a353b872f42f50e747a669a2da89a7a56151cec5",
          "dweb:/ipfs/Qmf3DWy25VAVEK2FVHWhKFcA6PL14zrgFJ6scDLkmVBYGm"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/TERC20.sol": {
        "keccak256": "0x6325dfb2a2a6e7bab6ce656f582be387a9c554e0bdff3a4d8877cd29cc86e7ba",
        "urls": [
          "bzz-raw://656fe26ec8e5d485965d7ab07e91e801dcfaf8ae9aff7e3de64c0b925d602e17",
          "dweb:/ipfs/QmYJZxu86K3D67sscx5kFeLJwV913Yc6MfpGNzt5JW4151"
        ],
        "license": "MIT"
      },
      "contracts/test/TestGammaPool.sol": {
        "keccak256": "0xd9c54fab8ebf83d2236b74d6b46ef935190f67ca9404d2ff636e7645f2e47ea1",
        "urls": [
          "bzz-raw://c884ca37864cff47d39ddf7ac378c58809671d84df5948a98dff0a9a591405ca",
          "dweb:/ipfs/QmXgsB8a4HGr22paUSrqgPXyXcvLjBoDkKppZQSGQizHSN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/TestGammaPool2.sol": {
        "keccak256": "0x3ecdf9cb3ed37f57bd546caa797b8906d68f313bc4e008ef246f227a25581163",
        "urls": [
          "bzz-raw://bc11df95d21d41213b9c8e7388c5f3e15152c7548bfb2f3edc2d2aebaa87ca5f",
          "dweb:/ipfs/QmanMpLcw9eEiMjGr25ugr14sN1g2a1i99ZwBQLLdxtyTY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@gammaswap/v1-core/contracts/interfaces/IGammaPool.sol": {
        "keccak256": "0xcdb8a1d9a41221b7f0c339065451b1978560c93c202be25a97af8c00ba2d55ef",
        "urls": [
          "bzz-raw://01663f10d4d767c9b098bb1ba5440f89b30f3e041b9a1dfd20658b43f4703f87",
          "dweb:/ipfs/QmRkLu869pW3pDQmGcc8DnekfQTyYojnHrbAT7ePKQoACx"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@gammaswap/v1-core/contracts/interfaces/IGammaPoolEvents.sol": {
        "keccak256": "0xf2ea9ca71d445ec5f8fe5d1ee1f28761b60c8f786902aff34e7438e102bfed79",
        "urls": [
          "bzz-raw://aa9cd3e2341355caf94d90d2a21f6aae15259c7345ade628c3977e310d7fd8b1",
          "dweb:/ipfs/QmQAXKruMhZqjfBaG1T6a8Do7DmNHggSxZWdacfXyQ879E"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@gammaswap/v1-core/contracts/interfaces/IGammaPoolFactory.sol": {
        "keccak256": "0xb8169429532ad037f8ab27c221d98132bdc5f815eebb16392bb51a3045b262ee",
        "urls": [
          "bzz-raw://bf2ac76dc37238eea4d26f793da4b135e1803e46e8b14f16e8062271954dab35",
          "dweb:/ipfs/QmVseSs8jTetSTH7hxGA4E4LMqPdJNEu12d268oobGyM7M"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@gammaswap/v1-core/contracts/interfaces/periphery/ISendTokensCallback.sol": {
        "keccak256": "0xa32cbd95925e95f0d2c5deca7f576313def8e1775ca5b8e3e98ef2a4b54154ba",
        "urls": [
          "bzz-raw://5f9446e78e834a914839ddf629174df60dc8996ff5d16c5a3b5cf7d62dc9fb35",
          "dweb:/ipfs/QmYjaWxnywfUceNLT27sDAGaqABYfD6q5kRnXaVNcizMed"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@gammaswap/v1-core/contracts/interfaces/strategies/events/IExternalStrategyEvents.sol": {
        "keccak256": "0x832450347032f3d6178045bcf754ea30b6a74eeb6a786fd23214582780619158",
        "urls": [
          "bzz-raw://1afbe6eab83fb06e3353ed9d22b70874efeb5787f51c60785569d86d98cf9399",
          "dweb:/ipfs/QmeQPwe75onniP9dCjifJuzd4d8BuM7iK2EuMEWcYDws88"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@gammaswap/v1-core/contracts/interfaces/strategies/events/IGammaPoolERC20Events.sol": {
        "keccak256": "0x9f71a686b572cb99dcf28c87fdbeaf513ec37b0b2a1eea7a442bbfef7e96c466",
        "urls": [
          "bzz-raw://ebef3809901f949160b180bbb7206832b4771fa3028c18f76eb6db0c5c6343bc",
          "dweb:/ipfs/QmRxxzNAuH8JhCjRTX2UtdmRd2DkKUMqxmm8Vga85cRQRL"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@gammaswap/v1-core/contracts/interfaces/strategies/events/ILiquidationStrategyEvents.sol": {
        "keccak256": "0x1f009597009c68e642dd0342849a5152d26207156c7b8cdcc3fd0721ddfc0e20",
        "urls": [
          "bzz-raw://f00d623be5df1a0817dd32e17f7a3c078dbd417911971c585e68c1537af6abe6",
          "dweb:/ipfs/QmeWeu9C96csmBNa6tSJtx4MZosHhCVuDQFoGpYik9Ynv2"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@gammaswap/v1-core/contracts/interfaces/strategies/events/ILongStrategyEvents.sol": {
        "keccak256": "0x42ecb77c95b87dd95d059c88ac704c57ff3cebbf6aec2b80208e7c817ff27324",
        "urls": [
          "bzz-raw://bd1cad8352d8e55270f26bc4e38ee16d15de9d8c77331ba7ef8afbf7f39ffc41",
          "dweb:/ipfs/QmeGum8jB8WzsqhV5eNErifCSjPt8hRS3P73MKxuRDevyP"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@gammaswap/v1-core/contracts/interfaces/strategies/events/IShortStrategyEvents.sol": {
        "keccak256": "0xb8364a03d6510ce6cc06e80d07e1b95eb830846531b538fd89d596341ea7e9b0",
        "urls": [
          "bzz-raw://ec99cfc1ce267318d1b1af8abd703022be278a1dfac467f15369b832b07467b2",
          "dweb:/ipfs/QmWgWfcHtLaV51at58G4UZL25FAGMbAYUKbPXAB7GYg5i7"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@gammaswap/v1-core/contracts/interfaces/strategies/events/IStrategyEvents.sol": {
        "keccak256": "0x064b90ebb2a719301c74417bff732323e9af13c79a46675917a6d9afaff79a70",
        "urls": [
          "bzz-raw://e0f2657b940b14fd82707f9f84eb6ad2a90d7296d14e18d8da3540c9bfa9a804",
          "dweb:/ipfs/QmSPRT9CcKf9b6BhuZBaTHjfWyNCJ4C4ZsTJQxPcEzh8r9"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/test/TestGammaPool2.sol",
    "id": 2810,
    "exportedSymbols": {
      "Context": [
        32312
      ],
      "IExternalStrategyEvents": [
        32026
      ],
      "IGammaPool": [
        31763
      ],
      "IGammaPoolERC20Events": [
        32048
      ],
      "IGammaPoolEvents": [
        31783
      ],
      "IGammaPoolFactory": [
        31976
      ],
      "ILiquidationStrategyEvents": [
        32072
      ],
      "ILongStrategyEvents": [
        32098
      ],
      "ISendTokensCallback": [
        32004
      ],
      "IShortStrategyEvents": [
        32129
      ],
      "IStrategyEvents": [
        32173
      ],
      "ITestERC20": [
        990
      ],
      "ITestERC20Metadata": [
        1015
      ],
      "ITestGammaPoolFactory": [
        1036
      ],
      "TERC20": [
        1622
      ],
      "TestGammaPool": [
        2637
      ],
      "TestGammaPool2": [
        2809
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:1449:9",
    "nodes": [
      {
        "id": 2639,
        "nodeType": "PragmaDirective",
        "src": "45:23:9",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 2640,
        "nodeType": "ImportDirective",
        "src": "70:29:9",
        "nodes": [],
        "absolutePath": "contracts/test/TestGammaPool.sol",
        "file": "./TestGammaPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2810,
        "sourceUnit": 2638,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2809,
        "nodeType": "ContractDefinition",
        "src": "101:1392:9",
        "nodes": [
          {
            "id": 2644,
            "nodeType": "VariableDeclaration",
            "src": "148:23:9",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fb945db",
            "mutability": "mutable",
            "name": "utilRate",
            "nameLocation": "163:8:9",
            "scope": 2809,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2643,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "148:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2646,
            "nodeType": "VariableDeclaration",
            "src": "177:25:9",
            "nodes": [],
            "constant": false,
            "functionSelector": "c914b437",
            "mutability": "mutable",
            "name": "borrowRate",
            "nameLocation": "192:10:9",
            "scope": 2809,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2645,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "177:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2648,
            "nodeType": "VariableDeclaration",
            "src": "208:26:9",
            "nodes": [],
            "constant": false,
            "functionSelector": "7007d7da",
            "mutability": "mutable",
            "name": "accFeeIndex",
            "nameLocation": "223:11:9",
            "scope": 2809,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2647,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "208:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2650,
            "nodeType": "VariableDeclaration",
            "src": "240:24:9",
            "nodes": [],
            "constant": false,
            "functionSelector": "053f14da",
            "mutability": "mutable",
            "name": "lastPrice",
            "nameLocation": "255:9:9",
            "scope": 2809,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2649,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "240:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2671,
            "nodeType": "FunctionDefinition",
            "src": "271:233:9",
            "nodes": [],
            "body": {
              "id": 2670,
              "nodeType": "Block",
              "src": "496:8:9",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2663,
                    "name": "_protocolId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2652,
                    "src": "420:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  {
                    "id": 2664,
                    "name": "_factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2654,
                    "src": "433:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2665,
                    "name": "_longStrategy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2656,
                    "src": "443:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2666,
                    "name": "_shortStrategy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2658,
                    "src": "458:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2667,
                    "name": "_liquidationStrategy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2660,
                    "src": "474:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2668,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2662,
                  "name": "TestGammaPool",
                  "nameLocations": [
                    "406:13:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2637,
                  "src": "406:13:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "406:89:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 2661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2652,
                  "mutability": "mutable",
                  "name": "_protocolId",
                  "nameLocation": "290:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2671,
                  "src": "283:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2651,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "283:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2654,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "311:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2671,
                  "src": "303:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "303:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2656,
                  "mutability": "mutable",
                  "name": "_longStrategy",
                  "nameLocation": "329:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2671,
                  "src": "321:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2658,
                  "mutability": "mutable",
                  "name": "_shortStrategy",
                  "nameLocation": "352:14:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2671,
                  "src": "344:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2660,
                  "mutability": "mutable",
                  "name": "_liquidationStrategy",
                  "nameLocation": "376:20:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2671,
                  "src": "368:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "368:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "282:115:9"
            },
            "returnParameters": {
              "id": 2669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "496:0:9"
            },
            "scope": 2809,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2741,
            "nodeType": "FunctionDefinition",
            "src": "510:413:9",
            "nodes": [],
            "body": {
              "id": 2740,
              "nodeType": "Block",
              "src": "599:324:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2680,
                        "name": "_loanData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2678,
                        "src": "609:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanData_$31252_memory_ptr",
                          "typeString": "struct IGammaPool.LoanData memory"
                        }
                      },
                      "id": 2682,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "619:2:9",
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31210,
                      "src": "609:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3230",
                      "id": 2683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "624:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20_by_1",
                        "typeString": "int_const 20"
                      },
                      "value": "20"
                    },
                    "src": "609:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2685,
                  "nodeType": "ExpressionStatement",
                  "src": "609:17:9"
                },
                {
                  "expression": {
                    "id": 2690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2686,
                        "name": "_loanData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2678,
                        "src": "636:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanData_$31252_memory_ptr",
                          "typeString": "struct IGammaPool.LoanData memory"
                        }
                      },
                      "id": 2688,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "646:6:9",
                      "memberName": "poolId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31216,
                      "src": "636:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2689,
                      "name": "cfmm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1635,
                      "src": "655:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "636:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2691,
                  "nodeType": "ExpressionStatement",
                  "src": "636:23:9"
                },
                {
                  "expression": {
                    "id": 2700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2692,
                        "name": "_loanData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2678,
                        "src": "669:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanData_$31252_memory_ptr",
                          "typeString": "struct IGammaPool.LoanData memory"
                        }
                      },
                      "id": 2694,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "679:10:9",
                      "memberName": "tokensHeld",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31232,
                      "src": "669:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                        "typeString": "uint128[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 2698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "706:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 2697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "692:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint128_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint128[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2695,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "696:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "id": 2696,
                          "nodeType": "ArrayTypeName",
                          "src": "696:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_storage_ptr",
                            "typeString": "uint128[]"
                          }
                        }
                      },
                      "id": 2699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "692:16:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                        "typeString": "uint128[] memory"
                      }
                    },
                    "src": "669:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                      "typeString": "uint128[] memory"
                    }
                  },
                  "id": 2701,
                  "nodeType": "ExpressionStatement",
                  "src": "669:39:9"
                },
                {
                  "expression": {
                    "id": 2708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 2702,
                          "name": "_loanData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2678,
                          "src": "718:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanData_$31252_memory_ptr",
                            "typeString": "struct IGammaPool.LoanData memory"
                          }
                        },
                        "id": 2705,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "728:10:9",
                        "memberName": "tokensHeld",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31232,
                        "src": "718:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                          "typeString": "uint128[] memory"
                        }
                      },
                      "id": 2706,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 2704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "739:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "718:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "744:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "718:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 2709,
                  "nodeType": "ExpressionStatement",
                  "src": "718:27:9"
                },
                {
                  "expression": {
                    "id": 2714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2710,
                        "name": "_loanData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2678,
                        "src": "755:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanData_$31252_memory_ptr",
                          "typeString": "struct IGammaPool.LoanData memory"
                        }
                      },
                      "id": 2712,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "765:9:9",
                      "memberName": "liquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31225,
                      "src": "755:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3231",
                      "id": 2713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "777:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_21_by_1",
                        "typeString": "int_const 21"
                      },
                      "value": "21"
                    },
                    "src": "755:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 2715,
                  "nodeType": "ExpressionStatement",
                  "src": "755:24:9"
                },
                {
                  "expression": {
                    "id": 2720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2716,
                        "name": "_loanData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2678,
                        "src": "789:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanData_$31252_memory_ptr",
                          "typeString": "struct IGammaPool.LoanData memory"
                        }
                      },
                      "id": 2718,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "799:8:9",
                      "memberName": "lpTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31228,
                      "src": "789:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3232",
                      "id": 2719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "810:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_22_by_1",
                        "typeString": "int_const 22"
                      },
                      "value": "22"
                    },
                    "src": "789:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2721,
                  "nodeType": "ExpressionStatement",
                  "src": "789:23:9"
                },
                {
                  "expression": {
                    "id": 2726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2722,
                        "name": "_loanData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2678,
                        "src": "822:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanData_$31252_memory_ptr",
                          "typeString": "struct IGammaPool.LoanData memory"
                        }
                      },
                      "id": 2724,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "832:9:9",
                      "memberName": "rateIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31219,
                      "src": "822:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3233",
                      "id": 2725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "844:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_23_by_1",
                        "typeString": "int_const 23"
                      },
                      "value": "23"
                    },
                    "src": "822:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 2727,
                  "nodeType": "ExpressionStatement",
                  "src": "822:24:9"
                },
                {
                  "expression": {
                    "id": 2732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2728,
                        "name": "_loanData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2678,
                        "src": "856:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanData_$31252_memory_ptr",
                          "typeString": "struct IGammaPool.LoanData memory"
                        }
                      },
                      "id": 2730,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "866:13:9",
                      "memberName": "initLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31222,
                      "src": "856:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3234",
                      "id": 2731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "882:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_24_by_1",
                        "typeString": "int_const 24"
                      },
                      "value": "24"
                    },
                    "src": "856:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 2733,
                  "nodeType": "ExpressionStatement",
                  "src": "856:28:9"
                },
                {
                  "expression": {
                    "id": 2738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2734,
                        "name": "_loanData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2678,
                        "src": "894:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanData_$31252_memory_ptr",
                          "typeString": "struct IGammaPool.LoanData memory"
                        }
                      },
                      "id": 2736,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "904:7:9",
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31213,
                      "src": "894:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3235",
                      "id": 2737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "914:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_25_by_1",
                        "typeString": "int_const 25"
                      },
                      "value": "25"
                    },
                    "src": "894:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2739,
                  "nodeType": "ExpressionStatement",
                  "src": "894:22:9"
                }
              ]
            },
            "baseFunctions": [
              2322
            ],
            "functionSelector": "365a5306",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "loan",
            "nameLocation": "519:4:9",
            "overrides": {
              "id": 2675,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "550:8:9"
            },
            "parameters": {
              "id": 2674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2673,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "524:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "523:9:9"
            },
            "returnParameters": {
              "id": 2679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2678,
                  "mutability": "mutable",
                  "name": "_loanData",
                  "nameLocation": "588:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "572:25:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LoanData_$31252_memory_ptr",
                    "typeString": "struct IGammaPool.LoanData"
                  },
                  "typeName": {
                    "id": 2677,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2676,
                      "name": "LoanData",
                      "nameLocations": [
                        "572:8:9"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31252,
                      "src": "572:8:9"
                    },
                    "referencedDeclaration": 31252,
                    "src": "572:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanData_$31252_storage_ptr",
                      "typeString": "struct IGammaPool.LoanData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "571:27:9"
            },
            "scope": 2809,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 2769,
            "nodeType": "FunctionDefinition",
            "src": "929:262:9",
            "nodes": [],
            "body": {
              "id": 2768,
              "nodeType": "Block",
              "src": "1052:139:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2752,
                      "name": "utilRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2644,
                      "src": "1062:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2753,
                      "name": "_utilRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2743,
                      "src": "1073:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1062:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2755,
                  "nodeType": "ExpressionStatement",
                  "src": "1062:20:9"
                },
                {
                  "expression": {
                    "id": 2758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2756,
                      "name": "borrowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2646,
                      "src": "1092:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2757,
                      "name": "_borrowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2745,
                      "src": "1105:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1092:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2759,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:24:9"
                },
                {
                  "expression": {
                    "id": 2762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2760,
                      "name": "accFeeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2648,
                      "src": "1126:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2761,
                      "name": "_accFeeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2747,
                      "src": "1140:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1126:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2763,
                  "nodeType": "ExpressionStatement",
                  "src": "1126:26:9"
                },
                {
                  "expression": {
                    "id": 2766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2764,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2650,
                      "src": "1162:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2765,
                      "name": "_lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2749,
                      "src": "1174:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1162:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2767,
                  "nodeType": "ExpressionStatement",
                  "src": "1162:22:9"
                }
              ]
            },
            "functionSelector": "16d967ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setLatestRates",
            "nameLocation": "938:14:9",
            "parameters": {
              "id": 2750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2743,
                  "mutability": "mutable",
                  "name": "_utilRate",
                  "nameLocation": "961:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2769,
                  "src": "953:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "953:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2745,
                  "mutability": "mutable",
                  "name": "_borrowRate",
                  "nameLocation": "980:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2769,
                  "src": "972:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2747,
                  "mutability": "mutable",
                  "name": "_accFeeIndex",
                  "nameLocation": "1001:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2769,
                  "src": "993:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2749,
                  "mutability": "mutable",
                  "name": "_lastPrice",
                  "nameLocation": "1023:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2769,
                  "src": "1015:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "952:82:9"
            },
            "returnParameters": {
              "id": 2751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1052:0:9"
            },
            "scope": 2809,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 2808,
            "nodeType": "FunctionDefinition",
            "src": "1197:294:9",
            "nodes": [],
            "body": {
              "id": 2807,
              "nodeType": "Block",
              "src": "1284:207:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2776,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2774,
                        "src": "1294:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RateData_$31277_memory_ptr",
                          "typeString": "struct IGammaPool.RateData memory"
                        }
                      },
                      "id": 2778,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1299:15:9",
                      "memberName": "utilizationRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31267,
                      "src": "1294:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2779,
                      "name": "utilRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2644,
                      "src": "1317:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1294:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2781,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:31:9"
                },
                {
                  "expression": {
                    "id": 2786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2782,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2774,
                        "src": "1335:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RateData_$31277_memory_ptr",
                          "typeString": "struct IGammaPool.RateData memory"
                        }
                      },
                      "id": 2784,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1340:10:9",
                      "memberName": "borrowRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31264,
                      "src": "1335:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2785,
                      "name": "borrowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2646,
                      "src": "1353:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1335:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2787,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:28:9"
                },
                {
                  "expression": {
                    "id": 2792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2788,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2774,
                        "src": "1373:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RateData_$31277_memory_ptr",
                          "typeString": "struct IGammaPool.RateData memory"
                        }
                      },
                      "id": 2790,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1378:11:9",
                      "memberName": "accFeeIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31255,
                      "src": "1373:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2791,
                      "name": "accFeeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2648,
                      "src": "1392:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1373:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2793,
                  "nodeType": "ExpressionStatement",
                  "src": "1373:30:9"
                },
                {
                  "expression": {
                    "id": 2799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2794,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2774,
                        "src": "1413:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RateData_$31277_memory_ptr",
                          "typeString": "struct IGammaPool.RateData memory"
                        }
                      },
                      "id": 2796,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1418:15:9",
                      "memberName": "currBlockNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31273,
                      "src": "1413:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2797,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1436:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1442:6:9",
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "1436:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1413:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2800,
                  "nodeType": "ExpressionStatement",
                  "src": "1413:35:9"
                },
                {
                  "expression": {
                    "id": 2805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2801,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2774,
                        "src": "1458:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RateData_$31277_memory_ptr",
                          "typeString": "struct IGammaPool.RateData memory"
                        }
                      },
                      "id": 2803,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1463:9:9",
                      "memberName": "lastPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31276,
                      "src": "1458:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2804,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2650,
                      "src": "1475:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1458:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2806,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:26:9"
                }
              ]
            },
            "baseFunctions": [
              2624
            ],
            "functionSelector": "871a78d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestRates",
            "nameLocation": "1206:14:9",
            "overrides": {
              "id": 2771,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1240:8:9"
            },
            "parameters": {
              "id": 2770,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1220:2:9"
            },
            "returnParameters": {
              "id": 2775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2774,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1278:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2808,
                  "src": "1262:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RateData_$31277_memory_ptr",
                    "typeString": "struct IGammaPool.RateData"
                  },
                  "typeName": {
                    "id": 2773,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2772,
                      "name": "RateData",
                      "nameLocations": [
                        "1262:8:9"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31277,
                      "src": "1262:8:9"
                    },
                    "referencedDeclaration": 31277,
                    "src": "1262:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RateData_$31277_storage_ptr",
                      "typeString": "struct IGammaPool.RateData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1261:22:9"
            },
            "scope": 2809,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2641,
              "name": "TestGammaPool",
              "nameLocations": [
                "128:13:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2637,
              "src": "128:13:9"
            },
            "id": 2642,
            "nodeType": "InheritanceSpecifier",
            "src": "128:13:9"
          }
        ],
        "canonicalName": "TestGammaPool2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2809,
          2637,
          1622,
          1015,
          990,
          31763,
          32048,
          32312,
          31783,
          32026,
          32072,
          32098,
          32129,
          32173
        ],
        "name": "TestGammaPool2",
        "nameLocation": "110:14:9",
        "scope": 2810,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 9
}