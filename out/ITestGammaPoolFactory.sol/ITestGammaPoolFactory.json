{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "protocolFee",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "origMin",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "origMax",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isSet",
          "type": "bool"
        }
      ],
      "name": "FeeUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "cfmm",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "protocolId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "addProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPoolsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_protocolId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_cfmm",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "getKey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "getPoolFee",
      "outputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_protocolFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_origMinFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_origMaxFee",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isSet",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "name": "getPools",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "_pools",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_protocolId",
          "type": "uint16"
        }
      ],
      "name": "getProtocol",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_protocolId",
          "type": "uint16"
        }
      ],
      "name": "isProtocolRestricted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "longStrategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "origMax",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "origMin",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_protocolId",
          "type": "uint16"
        }
      ],
      "name": "removeProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_protocolId",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "_isRestricted",
          "type": "bool"
        }
      ],
      "name": "setIsProtocolRestricted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_protocolFee",
          "type": "uint16"
        },
        {
          "internalType": "uint24",
          "name": "_origMinFee",
          "type": "uint24"
        },
        {
          "internalType": "uint24",
          "name": "_origMaxFee",
          "type": "uint24"
        },
        {
          "internalType": "bool",
          "name": "_isSet",
          "type": "bool"
        }
      ],
      "name": "setPoolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shortStrategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tester",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addProtocol(address)": "771d4c28",
    "allPoolsLength()": "efde4e64",
    "createPool(uint16,address,address[],bytes)": "f4bff5f1",
    "fee()": "ddca3f43",
    "feeInfo()": "995b5aae",
    "feeTo()": "017e7e58",
    "feeToSetter()": "094b7415",
    "getKey(address)": "93790f44",
    "getPool(bytes32)": "f6c00927",
    "getPoolFee(address)": "42fcc6fb",
    "getPools(uint256,uint256)": "bbe95837",
    "getProtocol(uint16)": "d2c7c2a4",
    "isProtocolRestricted(uint16)": "d7d1e126",
    "longStrategy()": "4932ed37",
    "origMax()": "07746e25",
    "origMin()": "84915e7f",
    "removeProtocol(uint16)": "466e0c0a",
    "setIsProtocolRestricted(uint16,bool)": "b3d5d66b",
    "setPoolFee(address,address,uint16,uint24,uint24,bool)": "02b764ad",
    "shortStrategy()": "89c4fa12",
    "tester()": "8308abd4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"protocolFee\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"origMin\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"origMax\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isSet\",\"type\":\"bool\"}],\"name\":\"FeeUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cfmm\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"protocolId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"addProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPoolsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_protocolId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_cfmm\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"getPoolFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_origMinFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_origMaxFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isSet\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"getPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_protocolId\",\"type\":\"uint16\"}],\"name\":\"getProtocol\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_protocolId\",\"type\":\"uint16\"}],\"name\":\"isProtocolRestricted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"longStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"origMax\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"origMin\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_protocolId\",\"type\":\"uint16\"}],\"name\":\"removeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_protocolId\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"_isRestricted\",\"type\":\"bool\"}],\"name\":\"setIsProtocolRestricted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_protocolFee\",\"type\":\"uint16\"},{\"internalType\":\"uint24\",\"name\":\"_origMinFee\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"_origMaxFee\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"_isSet\",\"type\":\"bool\"}],\"name\":\"setPoolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shortStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tester\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addProtocol(address)\":{\"details\":\"Add a protocol implementation to GammaPoolFactory contract. Which means GammaPoolFactory can create GammaPools with this implementation (protocol)\",\"params\":{\"_implementation\":\"- implementation address of GammaPool proxy contract. Because all GammaPools are created as proxy contracts\"}},\"allPoolsLength()\":{\"returns\":{\"_0\":\"count - number of GammaPools that have been instantiated through this GammaPoolFactory contract\"}},\"createPool(uint16,address,address[],bytes)\":{\"details\":\"Instantiate a new GammaPool for a CFMM based on an existing implementation (protocolId)\",\"params\":{\"_cfmm\":\"- address of CFMM the GammaPool is created for\",\"_data\":\"- custom struct containing additional information used to verify the `_cfmm`\",\"_protocolId\":\"- id identifier of GammaPool protocol (can be thought of as version)\",\"_tokens\":\"- addresses of ERC20 tokens in CFMM, used for validation during runtime of function\"},\"returns\":{\"_0\":\"_address - address of new GammaPool proxy contract that was instantiated\"}},\"fee()\":{\"returns\":{\"_0\":\"fee - protocol fee charged by GammaPool to liquidity borrowers in terms of basis points\"}},\"feeInfo()\":{\"returns\":{\"_0\":\"feeTo - address that receives protocol fees\",\"_1\":\"fee - protocol fee charged by GammaPool to liquidity borrowers in terms of basis points\"}},\"feeTo()\":{\"returns\":{\"_0\":\"feeTo - address that receives protocol fees\"}},\"feeToSetter()\":{\"returns\":{\"_0\":\"feeToSetter - address that has the power to set protocol fees\"}},\"getKey(address)\":{\"details\":\"Mapping of bytes32 salts (key) to GammaPool addresses. The salt is predetermined and used to instantiate a GammaPool with a unique address\",\"params\":{\"_pool\":\"- address of GammaPool that maps to bytes32 salt (key)\"},\"returns\":{\"_0\":\"_salt - the bytes32 key that is unique to the GammaPool and therefore also used as a unique identifier of the GammaPool\"}},\"getPool(bytes32)\":{\"details\":\"Mapping of bytes32 salts (key) to GammaPool addresses. The salt is predetermined and used to instantiate a GammaPool with a unique address\",\"params\":{\"_salt\":\"- the bytes32 key that is unique to the GammaPool and therefore also used as a unique identifier of the GammaPool\"},\"returns\":{\"_0\":\"_address - address of GammaPool that maps to bytes32 salt (key)\"}},\"getPoolFee(address)\":{\"details\":\"Get pool fee parameters used to calculate protocol fees\",\"params\":{\"_pool\":\"- pool address identifier\"},\"returns\":{\"_isSet\":\"- bool flag, true use fee information, false use GammaSwap default fees\",\"_origMaxFee\":\"- max origination fee\",\"_origMinFee\":\"- min origination fee\",\"_protocolFee\":\"- address of CFMM the GammaPool is created for\",\"_to\":\"- address receiving fee\"}},\"getPools(uint256,uint256)\":{\"details\":\"Get list of pools from start index to end index. If it goes over index it returns up to the max size of allPools array\",\"params\":{\"end\":\"- end index of pools to search\",\"start\":\"- start index of pools to search\"},\"returns\":{\"_pools\":\"- all pools requested\"}},\"getProtocol(uint16)\":{\"details\":\"Get implementation address that maps to protocolId. This is the actual implementation code that a GammaPool implements for a protocolId\",\"params\":{\"_protocolId\":\"- id identifier of GammaPool implementation (can be thought of as version)\"},\"returns\":{\"_0\":\"_address - implementation address of GammaPool proxy contract. Because all GammaPools are created as proxy contracts\"}},\"isProtocolRestricted(uint16)\":{\"details\":\"Check if protocol is restricted. Which means only owner of GammaPoolFactory is allowed to instantiate GammaPools using this protocol\",\"params\":{\"_protocolId\":\"- id identifier of GammaPool protocol (can be thought of as version) that is being checked\"},\"returns\":{\"_0\":\"_isRestricted - true if protocol is restricted, false otherwise\"}},\"origMax()\":{\"returns\":{\"_0\":\"origMax - max origination fee charged by GammaPool to liquidity borrowers in terms of basis points\"}},\"origMin()\":{\"returns\":{\"_0\":\"origMin - min origination fee charged by GammaPool to liquidity borrowers in terms of basis points\"}},\"removeProtocol(uint16)\":{\"details\":\"Removing protocol implementation from GammaPoolFactory contract. Which means GammaPoolFactory will no longer be able to create GammaPools with this implementation (protocol)\",\"params\":{\"_protocolId\":\"- id identifier of GammaPool implementation\"}},\"setIsProtocolRestricted(uint16,bool)\":{\"details\":\"Set a protocol to be restricted or unrestricted. That means only owner of GammaPoolFactory is allowed to instantiate GammaPools using this protocol\",\"params\":{\"_isRestricted\":\"- set to true for restricted, set to false for unrestricted\",\"_protocolId\":\"- id identifier of GammaPool protocol (can be thought of as version) that is being restricted\"}},\"setPoolFee(address,address,uint16,uint24,uint24,bool)\":{\"details\":\"Set pool fee parameters used to calculate protocol fees\",\"params\":{\"_isSet\":\"- bool flag, true use fee information, false use GammaSwap default fees\",\"_origMaxFee\":\"- max origination fee\",\"_origMinFee\":\"- min origination fee\",\"_pool\":\"- id identifier of GammaPool protocol (can be thought of as version)\",\"_protocolFee\":\"- address of CFMM the GammaPool is created for\",\"_to\":\"- address receiving fee\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addProtocol(address)\":{\"notice\":\"Only owner of GammaPoolFactory can call this function\"},\"removeProtocol(uint16)\":{\"notice\":\"Only owner of GammaPoolFactory can call this function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/ITestGammaPoolFactory.sol\":\"ITestGammaPoolFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@gammaswap/=node_modules/@gammaswap/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/test/ITestGammaPoolFactory.sol\":{\"keccak256\":\"0x7411ba0258d6503619e3d5ebf1e1c8524364f7ad336379b2f74fd99520fc96bd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://df28b1ab117ae1a12dfa5bc0a353b872f42f50e747a669a2da89a7a56151cec5\",\"dweb:/ipfs/Qmf3DWy25VAVEK2FVHWhKFcA6PL14zrgFJ6scDLkmVBYGm\"]},\"node_modules/@gammaswap/v1-core/contracts/interfaces/IGammaPoolFactory.sol\":{\"keccak256\":\"0xb8169429532ad037f8ab27c221d98132bdc5f815eebb16392bb51a3045b262ee\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bf2ac76dc37238eea4d26f793da4b135e1803e46e8b14f16e8062271954dab35\",\"dweb:/ipfs/QmVseSs8jTetSTH7hxGA4E4LMqPdJNEu12d268oobGyM7M\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint16",
              "name": "protocolFee",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint24",
              "name": "origMin",
              "type": "uint24",
              "indexed": false
            },
            {
              "internalType": "uint24",
              "name": "origMax",
              "type": "uint24",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isSet",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FeeUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "cfmm",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint16",
              "name": "protocolId",
              "type": "uint16",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_implementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addProtocol"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allPoolsLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_protocolId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "_cfmm",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "_tokens",
              "type": "address[]"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fee",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeTo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeToSetter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pool",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getKey",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pool",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolFee",
          "outputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_origMinFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_origMaxFee",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isSet",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPools",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "_pools",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_protocolId",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtocol",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_protocolId",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isProtocolRestricted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "longStrategy",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "origMax",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "origMin",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_protocolId",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeProtocol"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_protocolId",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "_isRestricted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setIsProtocolRestricted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "_protocolFee",
              "type": "uint16"
            },
            {
              "internalType": "uint24",
              "name": "_origMinFee",
              "type": "uint24"
            },
            {
              "internalType": "uint24",
              "name": "_origMaxFee",
              "type": "uint24"
            },
            {
              "internalType": "bool",
              "name": "_isSet",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPoolFee"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "shortStrategy",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tester",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addProtocol(address)": {
            "details": "Add a protocol implementation to GammaPoolFactory contract. Which means GammaPoolFactory can create GammaPools with this implementation (protocol)",
            "params": {
              "_implementation": "- implementation address of GammaPool proxy contract. Because all GammaPools are created as proxy contracts"
            }
          },
          "allPoolsLength()": {
            "returns": {
              "_0": "count - number of GammaPools that have been instantiated through this GammaPoolFactory contract"
            }
          },
          "createPool(uint16,address,address[],bytes)": {
            "details": "Instantiate a new GammaPool for a CFMM based on an existing implementation (protocolId)",
            "params": {
              "_cfmm": "- address of CFMM the GammaPool is created for",
              "_data": "- custom struct containing additional information used to verify the `_cfmm`",
              "_protocolId": "- id identifier of GammaPool protocol (can be thought of as version)",
              "_tokens": "- addresses of ERC20 tokens in CFMM, used for validation during runtime of function"
            },
            "returns": {
              "_0": "_address - address of new GammaPool proxy contract that was instantiated"
            }
          },
          "fee()": {
            "returns": {
              "_0": "fee - protocol fee charged by GammaPool to liquidity borrowers in terms of basis points"
            }
          },
          "feeInfo()": {
            "returns": {
              "_0": "feeTo - address that receives protocol fees",
              "_1": "fee - protocol fee charged by GammaPool to liquidity borrowers in terms of basis points"
            }
          },
          "feeTo()": {
            "returns": {
              "_0": "feeTo - address that receives protocol fees"
            }
          },
          "feeToSetter()": {
            "returns": {
              "_0": "feeToSetter - address that has the power to set protocol fees"
            }
          },
          "getKey(address)": {
            "details": "Mapping of bytes32 salts (key) to GammaPool addresses. The salt is predetermined and used to instantiate a GammaPool with a unique address",
            "params": {
              "_pool": "- address of GammaPool that maps to bytes32 salt (key)"
            },
            "returns": {
              "_0": "_salt - the bytes32 key that is unique to the GammaPool and therefore also used as a unique identifier of the GammaPool"
            }
          },
          "getPool(bytes32)": {
            "details": "Mapping of bytes32 salts (key) to GammaPool addresses. The salt is predetermined and used to instantiate a GammaPool with a unique address",
            "params": {
              "_salt": "- the bytes32 key that is unique to the GammaPool and therefore also used as a unique identifier of the GammaPool"
            },
            "returns": {
              "_0": "_address - address of GammaPool that maps to bytes32 salt (key)"
            }
          },
          "getPoolFee(address)": {
            "details": "Get pool fee parameters used to calculate protocol fees",
            "params": {
              "_pool": "- pool address identifier"
            },
            "returns": {
              "_isSet": "- bool flag, true use fee information, false use GammaSwap default fees",
              "_origMaxFee": "- max origination fee",
              "_origMinFee": "- min origination fee",
              "_protocolFee": "- address of CFMM the GammaPool is created for",
              "_to": "- address receiving fee"
            }
          },
          "getPools(uint256,uint256)": {
            "details": "Get list of pools from start index to end index. If it goes over index it returns up to the max size of allPools array",
            "params": {
              "end": "- end index of pools to search",
              "start": "- start index of pools to search"
            },
            "returns": {
              "_pools": "- all pools requested"
            }
          },
          "getProtocol(uint16)": {
            "details": "Get implementation address that maps to protocolId. This is the actual implementation code that a GammaPool implements for a protocolId",
            "params": {
              "_protocolId": "- id identifier of GammaPool implementation (can be thought of as version)"
            },
            "returns": {
              "_0": "_address - implementation address of GammaPool proxy contract. Because all GammaPools are created as proxy contracts"
            }
          },
          "isProtocolRestricted(uint16)": {
            "details": "Check if protocol is restricted. Which means only owner of GammaPoolFactory is allowed to instantiate GammaPools using this protocol",
            "params": {
              "_protocolId": "- id identifier of GammaPool protocol (can be thought of as version) that is being checked"
            },
            "returns": {
              "_0": "_isRestricted - true if protocol is restricted, false otherwise"
            }
          },
          "origMax()": {
            "returns": {
              "_0": "origMax - max origination fee charged by GammaPool to liquidity borrowers in terms of basis points"
            }
          },
          "origMin()": {
            "returns": {
              "_0": "origMin - min origination fee charged by GammaPool to liquidity borrowers in terms of basis points"
            }
          },
          "removeProtocol(uint16)": {
            "details": "Removing protocol implementation from GammaPoolFactory contract. Which means GammaPoolFactory will no longer be able to create GammaPools with this implementation (protocol)",
            "params": {
              "_protocolId": "- id identifier of GammaPool implementation"
            }
          },
          "setIsProtocolRestricted(uint16,bool)": {
            "details": "Set a protocol to be restricted or unrestricted. That means only owner of GammaPoolFactory is allowed to instantiate GammaPools using this protocol",
            "params": {
              "_isRestricted": "- set to true for restricted, set to false for unrestricted",
              "_protocolId": "- id identifier of GammaPool protocol (can be thought of as version) that is being restricted"
            }
          },
          "setPoolFee(address,address,uint16,uint24,uint24,bool)": {
            "details": "Set pool fee parameters used to calculate protocol fees",
            "params": {
              "_isSet": "- bool flag, true use fee information, false use GammaSwap default fees",
              "_origMaxFee": "- max origination fee",
              "_origMinFee": "- min origination fee",
              "_pool": "- id identifier of GammaPool protocol (can be thought of as version)",
              "_protocolFee": "- address of CFMM the GammaPool is created for",
              "_to": "- address receiving fee"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addProtocol(address)": {
            "notice": "Only owner of GammaPoolFactory can call this function"
          },
          "removeProtocol(uint16)": {
            "notice": "Only owner of GammaPoolFactory can call this function"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@gammaswap/=node_modules/@gammaswap/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/test/ITestGammaPoolFactory.sol": "ITestGammaPoolFactory"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/test/ITestGammaPoolFactory.sol": {
        "keccak256": "0x7411ba0258d6503619e3d5ebf1e1c8524364f7ad336379b2f74fd99520fc96bd",
        "urls": [
          "bzz-raw://df28b1ab117ae1a12dfa5bc0a353b872f42f50e747a669a2da89a7a56151cec5",
          "dweb:/ipfs/Qmf3DWy25VAVEK2FVHWhKFcA6PL14zrgFJ6scDLkmVBYGm"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@gammaswap/v1-core/contracts/interfaces/IGammaPoolFactory.sol": {
        "keccak256": "0xb8169429532ad037f8ab27c221d98132bdc5f815eebb16392bb51a3045b262ee",
        "urls": [
          "bzz-raw://bf2ac76dc37238eea4d26f793da4b135e1803e46e8b14f16e8062271954dab35",
          "dweb:/ipfs/QmVseSs8jTetSTH7hxGA4E4LMqPdJNEu12d268oobGyM7M"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/test/ITestGammaPoolFactory.sol",
    "id": 5231,
    "exportedSymbols": {
      "IGammaPoolFactory": [
        36595
      ],
      "ITestGammaPoolFactory": [
        5230
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:329:19",
    "nodes": [
      {
        "id": 5211,
        "nodeType": "PragmaDirective",
        "src": "45:23:19",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 5212,
        "nodeType": "ImportDirective",
        "src": "70:71:19",
        "nodes": [],
        "absolutePath": "node_modules/@gammaswap/v1-core/contracts/interfaces/IGammaPoolFactory.sol",
        "file": "@gammaswap/v1-core/contracts/interfaces/IGammaPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5231,
        "sourceUnit": 36596,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5230,
        "nodeType": "ContractDefinition",
        "src": "143:230:19",
        "nodes": [
          {
            "id": 5219,
            "nodeType": "FunctionDefinition",
            "src": "201:55:19",
            "nodes": [],
            "functionSelector": "4932ed37",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "longStrategy",
            "nameLocation": "210:12:19",
            "parameters": {
              "id": 5215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "222:2:19"
            },
            "returnParameters": {
              "id": 5218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5217,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5219,
                  "src": "247:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "247:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "246:9:19"
            },
            "scope": 5230,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5224,
            "nodeType": "FunctionDefinition",
            "src": "261:56:19",
            "nodes": [],
            "functionSelector": "89c4fa12",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "shortStrategy",
            "nameLocation": "270:13:19",
            "parameters": {
              "id": 5220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "283:2:19"
            },
            "returnParameters": {
              "id": 5223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5222,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5224,
                  "src": "308:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "308:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "307:9:19"
            },
            "scope": 5230,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5229,
            "nodeType": "FunctionDefinition",
            "src": "322:49:19",
            "nodes": [],
            "functionSelector": "8308abd4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tester",
            "nameLocation": "331:6:19",
            "parameters": {
              "id": 5225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "337:2:19"
            },
            "returnParameters": {
              "id": 5228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5227,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5229,
                  "src": "362:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "361:9:19"
            },
            "scope": 5230,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5213,
              "name": "IGammaPoolFactory",
              "nameLocations": [
                "178:17:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36595,
              "src": "178:17:19"
            },
            "id": 5214,
            "nodeType": "InheritanceSpecifier",
            "src": "178:17:19"
          }
        ],
        "canonicalName": "ITestGammaPoolFactory",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          5230,
          36595
        ],
        "name": "ITestGammaPoolFactory",
        "nameLocation": "153:21:19",
        "scope": 5231,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 19
}